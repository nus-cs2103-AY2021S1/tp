{
  "CP3107" : {
    "moduleCode" : "CP3107",
    "title" : "Computing for Voluntary Welfare Organisations",
    "moduleCredit" : "6",
    "semesters" : [ 1 ],
    "description" : "This is a project-based module that provides students with\ntraining in software engineering by working on an actual\nsoftware system that supports a local voluntary welfare\norganisation. This module is graded on a Completed\nSatisfactorily/Completed Unsatisfactorily (CS/CU) basis.",
    "preclusion" : null,
    "prerequisite" : "CS2010 or CS2020 or (((CS2030 or its equivalent) or CS2113/T) and CS2040/C). Student selection process will be enforced."
  },
  "LSM1306" : {
    "moduleCode" : "LSM1306",
    "title" : "Forensic Science",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "Crime is one feature of human behaviour that fascinates our community. How crimes impact our society and how crimes are investigated and solved in the Singapore context is the focus of the module. The module is designed to enable students to appreciate why and how crimes are committed, to understand how crimes are solved in Singapore using investigative, and the latest scientific and forensic techniques, and to learn the role of the major stakeholders in the Criminal Justice System. Experts from law, pharmacy, statistics, the Health Sciences Authority and the Singapore Police Force will cover topics related to forensic science.",
    "preclusion" : "GEK1542",
    "prerequisite" : null
  },
  "CP3106" : {
    "moduleCode" : "CP3106",
    "title" : "Independent Project",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "",
    "preclusion" : null,
    "prerequisite" : "[(CS2102 or CS2102S) and CS2105 and read (CS3214 or CS3215)] or IS3102 or IS4102 or CS3201 or CS3281 or CS4201 or CS4203"
  },
  "LSM1301" : {
    "moduleCode" : "LSM1301",
    "title" : "General Biology",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This is an introductory module that explores what a living thing is, the basics of life, and the science behind it. The course will introduce the chemistry of life and the unit of life. The question of how traits are inherited will be discussed and the field of biotechnology, including its applications and the ethical issues involved be will introduced. The diversity of life on earth will be explored, with discussions how life on earth possibly came about and how biologists try to classify and make sense of the diversity. The course will also introduce the concept of life functions from cells to tissues and from organs to systems. The concept of how organisms maintain their internal constancy and organisation of major organ systems will be discussed. The focus will be to introduce the unifying concepts in biology and how they play a role in everyday life.",
    "preclusion" : "GCE `A’ Level or H2 Biology or equivalent, or LSM1301X",
    "prerequisite" : null
  },
  "CS2106" : {
    "moduleCode" : "CS2106",
    "title" : "Introduction to Operating Systems",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces the basic concepts in operating systems and links it with contemporary operating systems (eg. Unix/Linux and Windows). It focuses on OS structuring and architecture, processes, memory management, concurrency and file systems. Topics include kernel architecture, system calls, interrupts, models of processes, process abstraction and services, scheduling, review of physical memory and memory management hardware, kernel memory management, virtual memory and paging, caches, working set, deadlock, mutual exclusion, synchronisation mechanisms, data and metadata in file systems, directories and structure, file system abstraction and operations, OS protection mechanisms, and user authentication.",
    "preclusion" : "CG2271 or EE4214. CEG students are not allowed to take this module.",
    "prerequisite" : "CS2100 or EE2007 or EE2024 or EE2028"
  },
  "CS2105" : {
    "moduleCode" : "CS2105",
    "title" : "Introduction to Computer Networks",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module aims to provide a broad introduction to computer networks and network application programming. It covers the main concepts, the fundamental principles, and the high-level workings of important protocols in each of the Internet protocol layer. Topics include the Web and Web applications, DNS services, socket programming, reliable protocols, transport and network layer protocols, secure communication, LAN, and data communication. Practical assignments and handson exercises expose students to network application programming and various networking tools and utilities.",
    "preclusion" : "IT2001, EE3204/E, EE4204/E, EE4210/E. CEG, CPE and EEE students are not allowed to take this module.",
    "prerequisite" : "(CS1020 or its equivalent) or CS2020 or (CS2040 or its equivalents)"
  },
  "CS2108" : {
    "moduleCode" : "CS2108",
    "title" : "Introduction to Media Computing",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module introduces students to (i) the fundamental principles, theory, algorithms, and data structures behind digital representation, compression, synchronization, and processing of image, audio, and video data types, and (ii) challenges and issues in developing media-rich applications, such as media streaming and media retrieval. Students will be exposed to the workings of common media file format and common manipulation techniques on media data. After taking the module, students should be confident enough in developing media applications and make appropriate trade-off and design decisions when dealing in media data in their software.",
    "preclusion" : "CS3246",
    "prerequisite" : "(CS1020 or its equivalent) or CS2020 or (CS2040 or its equivalent)"
  },
  "CS2107" : {
    "moduleCode" : "CS2107",
    "title" : "Introduction to Information Security",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module serves as an introductory module on information security. It illustrates the fundamentals of how systems fail due to malicious activities and how they can be protected. The module also places emphasis on the practices of secure programming and implementation. Topics covered include classical/historical ciphers, introduction to modern ciphers and cryptosystems, ethical, legal and organisational aspects, classic examples of direct attacks on computer systems such as input validation vulnerability, examples of other forms of attack such as social engineering/phishing attacks, and the practice of secure programming.",
    "preclusion" : null,
    "prerequisite" : "CS1010 or its equivalence"
  },
  "CS3245R" : {
    "moduleCode" : "CS3245R",
    "title" : "Information Retrieval",
    "moduleCredit" : "1",
    "semesters" : [ 1 ],
    "description" : "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.",
    "preclusion" : null,
    "prerequisite" : "Co-read with host module in current semester or pass host module in previous semester. Student selection process is enforced."
  },
  "CS5218" : {
    "moduleCode" : "CS5218",
    "title" : "Principles and Practice of Program Analysis",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "Program analysis denotes automated processes for predicting, estimating or proving properties of program behavior, whether functional or non-functional.  Example uses are compiler optimization, bug detection, performance evaluation, detection of security vulnerabilities, amongst many others.  This module first provides the rigorous mathematical foundations. This step is necessary in order to understand the common elements within the broad area of software analysis.  Secondly, through the use of a state-of-the-art program analysis system, this module provides hands-on instruction on programming real-life analyses.  In the end, the graduating student will be able to address a broad spectrum of program analysis in a practical way.",
    "preclusion" : null,
    "prerequisite" : "CS4212 Compiler Design or CS4215 Programming Language Implementation"
  },
  "CS5339" : {
    "moduleCode" : "CS5339",
    "title" : "Theory and Algorithms for Machine Learning",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "The module aims to provide a broad theoretical understanding of machine learning and how the theory guides the development of algorithms and applications. Topics covered include the approximation capabilities of common function classes used for machine learning, such as decision trees, neural networks, and support vector machines, the sample complexity of learning different function classes and methods of reducing the estimation error such as regularization and model selection, and computational methods used for learning such as convex optimization, greedy methods, and stochastic gradient\ndescent.",
    "preclusion" : "MA4270",
    "prerequisite" : "CS3244"
  },
  "CS2102" : {
    "moduleCode" : "CS2102",
    "title" : "Database Systems",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "The aim of this module is to introduce the fundamental concepts and techniques necessary for the understanding and practice of design and implementation of database applications and of the management of data with relational database management systems. The module covers practical and theoretical aspects of design with entity-relationship model, theory of functional dependencies and normalisation by decomposition in second, third and Boyce-Codd normal forms. The module covers practical and theoretical aspects of programming with SQL data definition and manipulation sublanguages, relational tuple calculus, relational domain calculus and relational algebra.",
    "preclusion" : "CS2102S, IT2002",
    "prerequisite" : "((CS1020 or its equivalent) or CS2020 or (CS2030 or its equivalent) or (CS2040 or its equivalent)) \nand (MA1100 or (CS1231 or its equivalent))"
  },
  "CS4248" : {
    "moduleCode" : "CS4248",
    "title" : "Natural Language Processing",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module deals with computer processing of human languages, emphasizing a corpus-based empirical approach. The topics covered include: 1. Linguistic essentials. 2. Basic techniques and algorithms: Hidden Markov model, Viterbi algorithm, supervised learning algorithms. 3. Words: part-of-speech tagging. 4. Syntax: noun phrase chunking, named entity tagging, parsing (top down, bottom up, probabilistic). 5. Semantics: word sense disambiguation. 6. Pragmatics: discourse, co-reference resolution. 7. Applications: text categorisation, text summarisation, language identification, information extraction, question answering, machine translation.",
    "preclusion" : null,
    "prerequisite" : "(CS3243 or CS3245) and \n(EE2012/A or MA2216 or ST2131 or ST2334)"
  },
  "CS2101" : {
    "moduleCode" : "CS2101",
    "title" : "Effective Communication for Computing Professionals",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module aims to equip students with the skills needed to communicate technical information to technical and nontechnical audiences, and to create comprehensible software documentation. A student-centric approach will\nbe adopted to encourage independent and collaborative learning while engaging students in team-based projects. Students will learn interpersonal and intercultural\ncommunication skills as well as hone their oral and written communication skills. Assessment modes include a variety of oral and written communication tasks such as reports, software guides, oral presentations, software demonstrations and project blogs.",
    "preclusion" : "CS2103 Software Engineering, IS2101 Business Technical Communication or its equivalent, ES2002, ES2007D, and ES1601.",
    "prerequisite" : "Students have to complete ES1000 and/or ES1103 (if required to take the module/s) before reading this module."
  },
  "CS4249" : {
    "moduleCode" : "CS4249",
    "title" : "Phenomena and Theories of Human-Computer Interaction",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module teaches the underlying science of Human-Computer Interaction (HCI) and its application to user interface design. It surveys a wide range of  psychological theories beginning with organizational behaviour approaches, understanding of work and workflow within organizations, and moving on to understanding human psychological architecture and processing constraints. It demonstrates via a combination of scientific theory understanding and engineering modelling the solutions of design problems facing a user interface designer. It also covers new design methods and techniques available and the new conceptual mechanisms used in HCI such as the metaphors for describing user interaction.",
    "preclusion" : null,
    "prerequisite" : "CS3240 or NM2213 or NM2216"
  },
  "CS2104" : {
    "moduleCode" : "CS2104",
    "title" : "Programming Language Concepts",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module introduces the concepts that serve as a basis for hundreds of programming languages. It aims to provide the students with a basic understanding and appreciation of the various essential programming-languages constructs, programming paradigms, evaluation criteria and language implementation issues. The module covers concepts from imperative, object-oriented, functional, logic, constraints, and concurrent programming. These concepts are illustrated by examples from varieties of languages such as Pascal, C, Java, Smalltalk, Scheme, Haskell, Prolog. The module also introduces various implementation issues, such as pseudo-code interpretation, static and dynamic semantics, abstract machine, type inferencing, etc.",
    "preclusion" : null,
    "prerequisite" : "(CS1020 or its equivalent) or CS2020 or (CS2030 or its equivalent) or CS2113/T"
  },
  "CS4246" : {
    "moduleCode" : "CS4246",
    "title" : "AI Planning and Decision Making",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces the major concepts and paradigms in planning and decision making in complex environments. It examines issues, challenges, and techniques in problem representation, goal or objective specification, response selection, and action\nconsequence for a wide range of strategic and tactical planning and decision making situations. Topics covered include deterministic and non-deterministic planning,\npractical planning and acting under resource constraints and uncertainy, expected utility and rational decision making, decision networks, Markov decision processes,\nelementary game theory, and multi-agent planning and decision making.",
    "preclusion" : "CS5446",
    "prerequisite" : "CS3243 and \n(EE2012/A or ST2132 or ST2334 or ((MA2216 or ST2131) and (ST1131/A or ST1232 or DSC2008)))"
  },
  "CS2103" : {
    "moduleCode" : "CS2103",
    "title" : "Software Engineering",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces the necessary conceptual and analytical tools for systematic and rigorous development of software systems. It covers four main areas of software development, namely object-oriented system analysis, object-oriented system modelling and design, implementation, and testing, with emphasis on system modelling and design and implementation of software modules that work cooperatively to fulfill the requirements of the system. Tools and techniques for software development, such as Unified Modelling Language (UML), program specification, and testing methods, will be taught. Major software engineering issues such as modularisation criteria, program correctness, and software quality will also be covered.",
    "preclusion" : "CS2103T, CS2113, CS2113T",
    "prerequisite" : "(CS1020 or its equivalent) or CS2020 or ((CS2030 or its equivalent) and (CS2040 or its equivalent))"
  },
  "CS4247" : {
    "moduleCode" : "CS4247",
    "title" : "Graphics Rendering Techniques",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module provides a general treatment of real-time and offline rendering techniques in 3D computer graphics. Specific topics include the raster graphics pipeline, viewing and transformation, real-time mapping techniques, real-time shadow algorithms, local reflection models, global illumination, distributed ray tracing, photon mapping, radiosity, volume rendering, image-based rendering and modelling, and strategies for anti-aliasing and photo-realism.",
    "preclusion" : null,
    "prerequisite" : "CS3241"
  },
  "CS4244" : {
    "moduleCode" : "CS4244",
    "title" : "Knowledge Representation and Reasoning",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This course will focus on core issues of representation and reasoning of the knowledge in the context of design of intelligent machines. We will focus on how logic can be used to formalise and perform deduction from existing knowledge. We will then discuss compilation techniques. Finally, we will discuss limitations of monotonic logic and discuss challenges for non-monotonic reasoning.",
    "preclusion" : null,
    "prerequisite" : "CS3243"
  },
  "CS2100" : {
    "moduleCode" : "CS2100",
    "title" : "Computer Organisation",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "The objective of this module is to familiarise students with the fundamentals of computing devices. Through this module students will understand the basics of data representation, and how the various parts of a computer work, separately and with each other. This allows students to understand the issues in computing devices, and how these issues affect the implementation of solutions. Topics covered include data representation systems, combinational and sequential circuit design techniques, assembly language, processor execution cycles, pipelining, memory hierarchy and input/output systems.",
    "preclusion" : "CS1104 or Students from Department of ECE",
    "prerequisite" : "CS1010 or its equivalent"
  },
  "CS4242" : {
    "moduleCode" : "CS4242",
    "title" : "Social Media Computing",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "The emergence of WWW, smart mobile devices and social networks has revolutionised the way we communicate, create, disseminate, and consume information. This has ushered in a new era of communications that involves complex information exchanges and user relationships. This module aims to provide students with a good understanding of the social network phenomena and computational skills for analysing the complex social relation networks between users, the contents they shared, and the ways contents and events are perceived and propagated through the social networks. The analysis will provide better understanding of the concerns and interests of users, and uncover live and emerging events that will affect the community.",
    "preclusion" : null,
    "prerequisite" : "CS2108 Introduction to Media Computing and CS3245 Information Retrieval."
  },
  "CS5332" : {
    "moduleCode" : "CS5332",
    "title" : "Biometric Authentication",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "Biometrics (such as fingerprint, iris images) are commonly used for authentication. This module covers authentication methods, different types of biometrics, pattern recognition, performance measurement, spoofing attacks, as well as issues such as privacy, user acceptance, and standards compliance. Students will gain a solid understanding of the fundamentals of the technology underlying biometric authentication, and the key issues to be addressed for successful deployment. Both the theoretical and practical\naspects of biometrics authentication will be discussed.",
    "preclusion" : null,
    "prerequisite" : "(CS2040 or its equivalent) and (MA1101R or MA1311 or MA1508E or MA1513) and \n(MA1102R or MA1505 or MA1507 or (MA1511 and MA1512) or MA1521) and \n(EE2012/A or ST2132 or ST2334 or ((MA2216 or ST2131) and (ST1131/A or ST1232 or DSC2008)))"
  },
  "CS1010" : {
    "moduleCode" : "CS1010",
    "title" : "Programming Methodology",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing.  Topics covered include computational thinking and computational problem solving, designing and specifying an algorithm, basic problem formulation and problem solving approaches, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures (arrays, strings, composite data types), basic sorting, and recursion.",
    "preclusion" : "CS1010E, CS1010J, CS1010S, CS1010X, CS1010XCP, CS1101S",
    "prerequisite" : null
  },
  "CS2220" : {
    "moduleCode" : "CS2220",
    "title" : "Introduction to Computational Biology",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This course aims to develop flexible and logical problem solving skills, understanding of main bioinformatics problems, and appreciation of main techniques and approaches to bioinformatics. Through case studies and hands-on exercises, the student will (i) master the basic tools and approaches for analysis of DNA sequences, protein sequences, gene expression profiles, etc. (ii) understand important problems and applications of computational biology, including identifying functional features in DNA and protein sequences, predicting protein function, and deriving diagnostic models from gene expression profiles, (iii) be confident to propose new solutions to both existing and emerging problems in computational biology.",
    "preclusion" : null,
    "prerequisite" : "(CS1020 or its equivalent) or CS2020 or  (CS2040 or its equivalent)"
  },
  "CS4243" : {
    "moduleCode" : "CS4243",
    "title" : "Computer Vision and Pattern Recognition",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module is for undergraduates who are interested in computer vision and its applications.  It covers (a) the basic skills needed in handling images and videos, (b) the basic theories needed to understand geometrical computer vision, and (c) pattern recognition.  Topics covered in image handling include: contrast stretch, histogram equalization, noise removal, and color space.  Topics covered in geometrical vision include:  affine transform, vanishing points, camera projection models, homography, camera calibration, rotation representations including quaternions, epipolar geometry, binocular stereo, structure from motion.  Topics covered for pattern recognition include principal component analysis.",
    "preclusion" : "EE4212 Computer Vision\nEE4704 (Image Processing and Analysis)",
    "prerequisite" : "((CS1020 or its equivalent) or (((CS2030 or its equivalent) or CS2113/T) and (CS2040 or its equivalent))) and \n(MA1101R or MA1311 or MA1508E or MA1513) and \n(MA1102R or MA1505 or MA1507 or (MA1511 and MA1512) or MA1521) and \n(EE2012/A or MA2216 or ST1131/A or ST1232 or ST2131 or ST2334)"
  },
  "CS5331" : {
    "moduleCode" : "CS5331",
    "title" : "Web Security",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module aims to prepare graduate students for understanding the security of the latest web platform and its interplay with operating systems and the cloud infrastructure. The topics covered include the design of web browsers and web \napplications, vulnerabilities in web applications and web browsers, design of web scanners, authentication in web-based platforms, security policies and enforcement mechanisms. This module also covers security topics on the interface between the \nweb platform and the backend systems, such as the underlying database systems and cloud infrastructure.",
    "preclusion" : null,
    "prerequisite" : "CS3235 Computer Security"
  },
  "CS4240" : {
    "moduleCode" : "CS4240",
    "title" : "Interaction Design for Virtual and Augmented Reality",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module aims to expose students to the human-centered principles of designing and building virtual reality (VR) and augmented reality (AR) applications. Students will learn about the fundamentals of VR and AR, human perceptions of reality, and the design patterns and guidelines for user interactions within VR/AR applications. Students will gain hands on experience building VR/AR applications applying these interaction principles.",
    "preclusion" : null,
    "prerequisite" : "CS3240 and (MA1301 or A-level / H2 Mathematics)"
  },
  "CS5330" : {
    "moduleCode" : "CS5330",
    "title" : "Randomized Algorithms",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "The module will cover basic concepts in the design and analysis of randomized algorithms. It will cover both basic techniques, such as Chernoff bounds, random walks, and the probabilistic method, and a variety of practical algorithmic applications, such as load balancing, hash functions, and graph/network algorithms. The focus will be on utilizing randomization to develop algorithms that are more efficient and/or simpler than their deterministic counterparts.",
    "preclusion" : null,
    "prerequisite" : "CS3230"
  },
  "CS2103T" : {
    "moduleCode" : "CS2103T",
    "title" : "Software Engineering",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces the necessary conceptual and analytical tools for systematic and rigorous development of software systems. It covers four main areas of software development, namely object-oriented system analysis, object-oriented system modelling and design, implementation, and testing, with emphasis on system modelling and design and implementation of software modules that work cooperatively to fulfill the requirements of the system. Tools and techniques for software development, such as Unified Modelling Language (UML), program specification, and testing methods, will be taught. Major software engineering issues such as modularisation criteria, program correctness, and software quality will also be covered.",
    "preclusion" : "CS2103, CS2113, CS2113T, IS2101 or its equivalent.",
    "prerequisite" : "For SoC students only. (CS1020 or its equivalent) or CS2020 or ((CS2030 or its equivalent) and (CS2040 or its equivalent))"
  },
  "ST2334" : {
    "moduleCode" : "ST2334",
    "title" : "Probability and Statistics",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "Basic concepts of probability, conditional probability, independence, random variables, joint and marginal distributions, mean and variance, some common probability distributions, sampling distributions, estimation and hypothesis testing based on a normal population.  This module is targeted at students who are interested in Statistics and are able to meet the pre-requisites. Preclude ME students taking or have taken ME4273.",
    "preclusion" : "ST1131, ST1131A, ST1232, ST2131, MA2216, CE2407, EC2231, EC2303, PR2103, DSC2008. ME students taking or having taken ME4273. All ISE students.",
    "prerequisite" : "MA1102R or MA1312 or MA1505 or MA1507 or MA1521"
  },
  "CS1231S" : {
    "moduleCode" : "CS1231S",
    "title" : "Discrete Structures",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces mathematical tools required in the study of computer science. Topics include: (1) Logic and proof techniques: propositions, conditionals, quantifications. (2) Relations and Functions: Equivalence relations and partitions. Partially ordered sets. Well-Ordering Principle. Function equality. Boolean/identity/inverse functions. Bijection. (3) Mathematical formulation of data models (linear model, trees, graphs). (4) Counting and Combinatoric: Pigeonhole Principle. Inclusion-Exclusion Principle. Number of relations on a set, number of injections from one finite set to another, Diagonalization proof: An infinite countable set has an uncountable power set; Algorithmic proof: An infinite set has a countably infinite subset. Subsets of countable sets are countable.",
    "preclusion" : "MA1100 and CS1231 or its equivalent",
    "prerequisite" : "A-level Mathematics or H2 Mathematics or MA1301 or MA1301FC or MA1301X"
  },
  "CS4239" : {
    "moduleCode" : "CS4239",
    "title" : "Software Security",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "Software engineering processes need to include security considerations in the modern world. This module familiarizes students to security issues in different stages of the software life-cycle. At the end of the module, the students are expected to understand secure programming practices, be able to analyse and check for impact of malicious inputs in programs, and employ specific testing techniques which can help detect software vulnerabilities.",
    "preclusion" : "CS5439",
    "prerequisite" : "CS3235 Computer Security and (CS2103 or its equivalent)"
  },
  "CS4238" : {
    "moduleCode" : "CS4238",
    "title" : "Computer Security Practice",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This is a practice security module with emphasis on hands-on experiences of computer security. The objective of this module is to connect computer security knowledge to practical skills, including common attacks and protection mechanisms, system administration, and development of secured software. Topics covered include network security, operating system security, and application security, such as DNS attacks, memory-error exploits, and web application attacks. Students will learn through lab-based exercises and assignments.",
    "preclusion" : null,
    "prerequisite" : "CS3235 Computer Security"
  },
  "CS5446" : {
    "moduleCode" : "CS5446",
    "title" : "AI Planning and Decision Making",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces the major concepts and paradigms in planning and decision making in complex environments. It examines issues, challenges, and techniques in problem representation, goal or objective specification, response selection, and action consequence for a wide range of strategic and tactical planning and decision making situations. Topics covered include deterministic and nondeterministic planning, practical planning and acting under resource constraints and uncertainty, expected utility and rational decision making, decision networks, Markov decision processes, elementary game theory, and multiagent planning and decision making.",
    "preclusion" : "CS4246",
    "prerequisite" : "CS3243 and \n(EE2012/A or ST2132 or ST2334 or ((MA2216 or ST2131) and (ST1131/A or ST1232 or DSC2008)))"
  },
  "CS4236" : {
    "moduleCode" : "CS4236",
    "title" : "Cryptography Theory and Practice",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module aims to introduce the foundation, principles and concepts behind cryptology and the design of secure communication systems. The emphasis is on the formulation and techniques of various cryptographic primitives, and on the secure usage of such primitives to achieve the goals of confidentially, integrity, and authenticity in both theoretical settings and practical scenarios. Basic topics include pseudorandom functions, symmetric key encryption, public key encryption, message\nauthentication codes, hash functions, digital signatures, key exchange and PKI. Selected topics may include: secret sharing, TCP/IP security, Kerberos, SSL, trusted computing, side-channel attacks.",
    "preclusion" : null,
    "prerequisite" : "((CS2010 or its equivalent) or CS2020 or (CS2040 or its equivalent)) and (MA1100 or (CS1231 or its equivalent)) and CS2107"
  },
  "CS4234" : {
    "moduleCode" : "CS4234",
    "title" : "Optimisation Algorithms",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module covers common algorithmic techniques for solving optimisation problems, and introduces students to approaches for finding good-enough solutions to NP-hard problems. Topics covered include linear and integer programming, network flow algorithms, local search heuristics, approximation algorithms, and randomized algorithms. Through analysis and application of the techniques to a variety of canonical problems, students develop confidence to (i) appropriately model a given optimisation problem, (ii) apply appropriate algorithmic techniques to solve the problem, (iii) analyse the properties of the problem and candidate algorithms, such as time and space complexity, convergence, approximability, and optimality bound.",
    "preclusion" : null,
    "prerequisite" : "CS3230 and \n(MA1101R or MA1311 or MA1508E or MA1513)"
  },
  "CS5322" : {
    "moduleCode" : "CS5322",
    "title" : "Database Security",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "Database security has a great impact on the design of today's information systems. This course will provide an overview of database security concepts and techniques and discuss new directions of database security in the context of Internet information management. Topics covered include: Access control models for DBMSs, Inference controls, XML database security, Encrypted databases, Digital credentials and PKIs, Trust in open systems, and Peer-to-peer system security.",
    "preclusion" : null,
    "prerequisite" : "CS3223 Database Systems Implementation"
  },
  "CS4231" : {
    "moduleCode" : "CS4231",
    "title" : "Parallel and Distributed Algorithms",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This course will examine some fundamental issues in parallel programming and distributed computing, and the relationships between the two.  Parallel programming: mutual exclusion, semaphores, consistency, wait-free synchronization.  Distributed computing: time, global state, snapshots, message ordering.  Relationships: consensus, fault-tolerance, transactions, self-stabilization.",
    "preclusion" : null,
    "prerequisite" : "CS3230 Design and Analysis of Algorithms or CS3210 Parallel Computing"
  },
  "CP5010" : {
    "moduleCode" : "CP5010",
    "title" : "Graduate Research Paper",
    "moduleCredit" : "0",
    "semesters" : [ 1, 2 ],
    "description" : "The graduate research paper presentation is for evaluating the ability of the student to undertake a critical review of an existing research area.  The student is expected to have necessary background and show competence in embarking on the PhD research.  Students are expected to identify a promising research area.  The paper should be self-contained and provide a good overview of the research problems, initial exploration of the research area, and insight to the research problems, with preliminary study and proposals on the outstanding research issues.  It should contain more findings than a survery paper.",
    "preclusion" : null,
    "prerequisite" : null
  },
  "CS4232" : {
    "moduleCode" : "CS4232",
    "title" : "Theory of Computation",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "The objective of this module is to provide students with a theoretical understanding of what can be computed, and an introduction to the theory of complexity. It aims to introduce (1) some standard formal models of computation so as to develop an understanding of what can or cannot be computed by various computing devices; (2) some reasoning techniques commonly used in computer science; these include model equivalence, non-determinism, digitalisation, simulation and reduction; and (3) the mathematical formulation of objects in computer science so as to study their properties.",
    "preclusion" : null,
    "prerequisite" : "CS1231 or CS1231S or any level-2 MA module"
  },
  "CS4350" : {
    "moduleCode" : "CS4350",
    "title" : "Game Development Project",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "The objective of this project-based module is to provide an opportunity for the students to work in a group to design and develop a game following the main stages of game development process. The module will focus on the design of core dynamic, game mechanics, strategy, progression, balancing, game levels, interface and technical features including 3D graphics, animation, AI, physics, and networking. In addition, software engineering principles will be practised in developing the game software.",
    "preclusion" : null,
    "prerequisite" : "CS3247 or NM3216"
  },
  "CSA6770" : {
    "moduleCode" : "CSA6770",
    "title" : "Graduate Research Seminar",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This is a required module for all PhD candidates in Cultural Studies in Asia programme.  It is a forum for candidates to engage each other in critical discussion of their dissertation and other research projects.  Each candidate is required to present a formal research paper.  Active participation from each is expected.  The module will be graded Satisfactory/Unsatisfactory' on the basis of a candidate's presentation and participation in discussions throughout the semester.",
    "preclusion" : null,
    "prerequisite" : null
  },
  "CM1131" : {
    "moduleCode" : "CM1131",
    "title" : "Physical Chemistry 1",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "Equations of state of ideal and real gases, intermolecular forces; kinetic theory of gases; first law of thermodynamics; enthalpy; thermochemistry; the second law; entropy; Helmholtz and Gibbs functions; the third law; rates of chemical reactions; accounting for the rate laws - reaction mechanisms; effect of temperature on reaction rate; theories of reaction rates.",
    "preclusion" : null,
    "prerequisite" : "'A' level or H2 pass in Chemistry or equivalent"
  },
  "CP3209" : {
    "moduleCode" : "CP3209",
    "title" : "Undergraduate Research Project in Computing",
    "moduleCredit" : "8",
    "semesters" : [ 1, 2 ],
    "description" : "This year-long module provides an opportunity for students to undertake a substantial research project under the supervision of faculty members of the School of Computing. Through this research collaboration, the student will experience first-hand the challenges and exhilaration of research, discovery and invention.",
    "preclusion" : null,
    "prerequisite" : "Completed 60MCs"
  },
  "CP3208" : {
    "moduleCode" : "CP3208",
    "title" : "Undergraduate Research in Computing I",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "The module (together with CP3209) is part of the UROP (Computing) project. The objective of this module and the UROP (Computing) project in general, is to provide an opportunity for talented students to undertake a substantial research project under the supervision of faculty members of the School of Computing. Through this research collaboration, the student will get to experience at first hand the challenges and exhilaration of research, discovery and invention. This module should be followed by CS3209 to complete the UROP (Computing) project.",
    "preclusion" : "CS3208",
    "prerequisite" : "SoC students who have passed at least 60 MCs and with approval from respective department."
  },
  "CS5439" : {
    "moduleCode" : "CS5439",
    "title" : "Software Security",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "Software engineering processes need to include security considerations in the modern world. This module familiarizes students to security issues in different stages of the software life-cycle. At the end of the module, the students are expected to understand secure programming practices, be able to analyse and check for impact of malicious inputs in programs, and employ specific testing techniques which can help detect software vulnerabilities.",
    "preclusion" : "CS4239",
    "prerequisite" : "CS3235 and (CS2103 or its equivalent)"
  },
  "TR3202S" : {
    "moduleCode" : "TR3202S",
    "title" : "Start-up Internship Programme",
    "moduleCredit" : "12",
    "semesters" : [ 1, 2 ],
    "description" : "This module documents the learning experience from the internship in writing. Taken together with TR3201 Entrepreneurship Practicum, the student will prepare a weekly logbook as well as internship reports which will be used a part of the evaluation of their internship experience.",
    "preclusion" : "TR3102",
    "prerequisite" : null
  },
  "TR3202T" : {
    "moduleCode" : "TR3202T",
    "title" : "Start-up Internship Programme",
    "moduleCredit" : "12",
    "semesters" : [ 1, 2 ],
    "description" : "This module documents the learning experience from the internship in writing. Taken together with TR3201 Entrepreneurship Practicum, the student will prepare a weekly logbook as well as internship reports which will be used a part of the evaluation of their internship experience.",
    "preclusion" : "TR3102",
    "prerequisite" : null
  },
  "CS4226" : {
    "moduleCode" : "CS4226",
    "title" : "Internet Architecture",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module aims to focus on advanced networking concepts pertaining to the modern Internet architecture and applications. It covers a range of topics including network performance (throughput, delay, Little’s Law and M/M/1 queuing formula), and resource allocation and buffer management (max-min fair, round-robin and RED), intra- and inter-domain routing (RIP, OSPF and BGP), congestion control and modern variations of TCP (AIMD and Cubic TCP), peer-to-peer applications and content delivery networks (BitTorrent, Skype, Akamai), and data center networking and management (SDN and OpenFlow).",
    "preclusion" : null,
    "prerequisite" : "(CS2105 or EE3204 or EE4204) and \n(EE2012/A or MA2216 or ST2131 or ST2334)"
  },
  "CS4347" : {
    "moduleCode" : "CS4347",
    "title" : "Sound and Music Computing",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module introduces the fundamental technologies employed in Sound and Music Computing focusing on three major categories: speech, music, and environmental sound. This module introduces the concept of sound and its representations in the analog and digital domains, as well as in time and frequency domains. Moreover, this module provides hands-on instruction on relevant machine learning tools, and an in-depth review of related technologies in sound data analytics (Automatic Speech Recognition, Automatic Music Transcription and Sound Event Detection) leading to a group project. Topics in sound synthesis, automatic music generation and music information retrieval will be covered for breadth.",
    "preclusion" : null,
    "prerequisite" : "CS2108 and \n(MA1101R or MA1311 or MA1508E or MA1513) and \n(MA1102R or MA1505 or MA1507 or (MA1511 and MA1512) or MA1521)"
  },
  "CS4224" : {
    "moduleCode" : "CS4224",
    "title" : "Distributed Databases",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module studies the management of data in a distributed environment. It covers the fundamental principles of distributed data management and includes distribution design, data integration, distributed query processing and optimization, distributed transaction management, and replication. It will also look at how these techniques can be adapted to support database management in emerging technologies (e.g., parallel systems, peer-to-peer systems, cloud computing).",
    "preclusion" : "CS5424",
    "prerequisite" : "CS3223"
  },
  "CS1101S" : {
    "moduleCode" : "CS1101S",
    "title" : "Programming Methodology",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces the concepts of programming and computational problem solving, and is the first and foremost introductory module to computing. Starting from a small core of fundamental abstractions, the module introduces programming as a method for communicating computational processes. The module begins with purely functional programming based on a simple substitution-based execution model, and ends with a powerful modern imperative language based on a realistic environment-based execution model. Topics covered include: functional abstraction, recursion, higher-order functions, data abstraction, algorithmic strategies, state mutation, loops and arrays, evaluation strategies, sorting and searching, debugging and testing.",
    "preclusion" : "CS1010 or its equivalents",
    "prerequisite" : null
  },
  "CS4225" : {
    "moduleCode" : "CS4225",
    "title" : "Big Data Systems for Data Science",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "Data science incorporates varying elements and builds on techniques and theories from many fields, including statistics, data engineering, data mining, visualization, data warehousing, and high-performance computing systems with the goal of extracting meaning from big data and creating data products. Data science utilizes advanced computing systems such as Apache Hadoop and Spark to address big data challenges. In this module, students will learn various computing systems and optimization techniques that are used in data science with emphasis on the system building and algorithmic optimizations of these techniques.",
    "preclusion" : "BT4221 and CS5425",
    "prerequisite" : "CS2102 or IT2002"
  },
  "CS4222" : {
    "moduleCode" : "CS4222",
    "title" : "Wireless Networking",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module aims to provide solid foundation for students in the area of wireless networks and introduces students to the emerging area of cyber-physical-system/Internet-of-Things. The module will cover wireless networking across all layers of the networking stack including physical, link, MAC, routing and application layers. Different network technologies with different characteristic will also be covered, including cellular networks, Wi-Fi, Bluetooth and ZigBee. Some key concepts that cut across all layers and network types are mobility management, energy efficiency, and integration of sensing and communications. The module emphasizes on exposing students to practical network system issues through building software prototypes.",
    "preclusion" : "CS5422",
    "prerequisite" : "(CS2105 or EE3204/E or EE4204) and \n(EE2012/A or MA2216 or ST2131 or ST2334)"
  },
  "CS4223" : {
    "moduleCode" : "CS4223",
    "title" : "Multi-core Architectures",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "The world of parallel computer architecture has gone through a significant transformation in the recent years from high-end supercomputers used only for scientific applications to the multi-cores (multiple processing cores on a single chip) that are ubiquitous in mainstream computing systems including desktops, servers, and embedded systems. In the context of this exciting development, the aim of this module is to examine the design issues that are critical to modern parallel architectures. Topics include instruction-level parallelism through static and dynamic scheduling, shared memory, message-passing, and data parallel computer architectures, cache coherence protocols, hardware synchronization primitives, and memory consistency models.",
    "preclusion" : null,
    "prerequisite" : "(CS2106 Operating Systems or CG2271 Realtime Operating Systems) and (CS3210 Parallel Computing or CS3220 Computer Architecture or CG3207 Computer Architecture)."
  },
  "TR3202N" : {
    "moduleCode" : "TR3202N",
    "title" : "Start-up Internship Programme",
    "moduleCredit" : "12",
    "semesters" : [ 1, 2 ],
    "description" : "This module documents the learning experience from the internship in writing. Taken together with TR3201 Entrepreneurship Practicum, the student will prepare a weekly logbook as well as internship reports which will be used a part of the evaluation of their internship experience.",
    "preclusion" : "TR3102",
    "prerequisite" : null
  },
  "CS1231" : {
    "moduleCode" : "CS1231",
    "title" : "Discrete Structures",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces mathematical tools required in the study of computer science. Topics include: (1) Logic and proof techniques: propositions, conditionals, quantifications.  (2) Relations and Functions: Equivalence relations and partitions.  Partially ordered sets.  Well-Ordering Principle. Function equality.  Boolean/identity/inverse functions.  Bijection. (3) Mathematical formulation of data models (linear model, trees, graphs). (4) Counting and Combinatoric: Pigeonhole Principle. Inclusion-Exclusion Principle.  Number of relations on a set, number of injections from one finite set to another, Diagonalisation proof: An infinite countable set has an uncountable power set; Algorithmic proof: An infinite set has a countably infinite subset.  Subsets of countable sets are countable.",
    "preclusion" : "MA1100, CS1231S",
    "prerequisite" : "A-level Mathematics or H2 Mathematics or MA1301 or MA1301FC or MA1301X"
  },
  "CS4220" : {
    "moduleCode" : "CS4220",
    "title" : "Knowledge Discovery Methods in Bioinformatics",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "The advent of high throughput technologies (e.g., DNA chips, microarray), biologists are being overloaded with information (e.g., gene expression data). A systematic way is needed to analyze the data to make sense of them. This module is introduced to provide students with knowledge of techniques that can be used to analyse biological data to enable them to discover new knowledge. At the end of the module, students will be able to identify the relevant techniques for different biological data to uncover new information. Topics include: Clustering analysis, classification, association rule mining; support vector machines; Hidden Markov Models.",
    "preclusion" : null,
    "prerequisite" : "CS2220 or LSM2241"
  },
  "CS2040S" : {
    "moduleCode" : "CS2040S",
    "title" : "Data Structures and Algorithms",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces students to the design and\nimplementation of fundamental data structures and\nalgorithms. The module covers basic data structures\n(linked lists, stacks, queues, hash tables, binary heaps,\ntrees, and graphs), searching and sorting algorithms, and\nbasic analysis of algorithms.",
    "preclusion" : "CS1020, CS1020E, CS2020, CS2010, CS2040, CS2040C",
    "prerequisite" : "(MA1100 or (CS1231 or its equivalent)) and (CS1010 or its equivalent)"
  },
  "CS4221" : {
    "moduleCode" : "CS4221",
    "title" : "Database Applications Design and Tuning",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module addresses the design and performance tuning of\ndatabase applications. The syllabus focusses on relational database applications implemented with relational database management systems. Topics covered include normalisation theory (functional, multi-valued and join dependency, normal forms, decomposition and synthesis methods), entityrelationship approach and SQL tuning (performance evaluation, execution plan verification, indexing, de-normalization, code level and transactions tuning). The syllabus optionally includes selected topics in the technologies, design and performance tuning of non-relational database applications (for instance, network and hierarchical models and nested relational model for an historical perspective, as well as XML and NoSQL systems for a modern perspective).",
    "preclusion" : "CS5421",
    "prerequisite" : "CS3223"
  },
  "CS6244" : {
    "moduleCode" : "CS6244",
    "title" : "Advanced Topics in Robotics",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module presents the advances in robotics research over a broad range of topics such as robot perception, learning, decision making and control, and human-robot interaction. The exact topics of focus may differ in each offering.  Through this module, students will get familiar with recent research trends and developments in robotics and prepare for research in robotics and related fields.",
    "preclusion" : null,
    "prerequisite" : "CS3230 and \n(MA1101R or MA1311 or MA1506 or MA1508E) and\n(ST2131 or ST2334)"
  },
  "TR3202I" : {
    "moduleCode" : "TR3202I",
    "title" : "Start-up Internship ProgrammeStart-up Internship Programme",
    "moduleCredit" : "12",
    "semesters" : [ 1, 2 ],
    "description" : "This module documents the learning experience from the internship in writing. Taken together with TR3201 Entrepreneurship Practicum, the student will prepare a weekly logbook as well as internship reports which will be used a part of the evaluation of their internship experience.",
    "preclusion" : "TR3102",
    "prerequisite" : null
  },
  "CS2040" : {
    "moduleCode" : "CS2040",
    "title" : "Data Structures and Algorithms",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces students to the design and implementation of fundamental data structures and algorithms. The module covers basic data structures (linked lists, stacks, queues, hash tables, binary heaps, trees, and graphs), searching and sorting algorithms, and basic analysis of algorithms.",
    "preclusion" : "CS1020, CS1020E, CS2020, CS2010, CS2040C, CS2040S",
    "prerequisite" : "CS1010 or its equivalent"
  },
  "CS6240" : {
    "moduleCode" : "CS6240",
    "title" : "Multimedia Analysis",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module aims to provide a comprehensive and rigorous treatment of the main approaches in multimedia (document, image, video, graphics) analysis. Three main themes are covered: (1) representation and modelling of multimedia entities using various modelling approaches, (2) matching of a model with an input entity, and (3) derivation of a model from sample entities. It focuses on the non-vector-space approach, which complements the vector-space approach to multimedia analysis.",
    "preclusion" : null,
    "prerequisite" : "CS4243 or CS5240"
  },
  "CP5103" : {
    "moduleCode" : "CP5103",
    "title" : "Master of Computing Project",
    "moduleCredit" : "8",
    "semesters" : [ 1, 2 ],
    "description" : "The project option provides individual students the\nopportunity and experience to work on a significant\ncomputing project. It aims to prepare students with\nsufficient practical and/or research experiences in the\ncomputing field. The project will be carried out under the\nsupervision of an academic staff. The selection of the\ntopic will be done in consultation with the supervisor. All\nprojects will be vetted by the School. The project will be\nassessed through a written project report and will be\nletter-graded.",
    "preclusion" : "CP5101 (MComp Dissertation), CP5102 (MComp\nInformation Security Project) or any project/ dissertation\nmodule.",
    "prerequisite" : "Students must be in Master of Computing programme."
  },
  "PC1143" : {
    "moduleCode" : "PC1143",
    "title" : "Introduction to Electricity & Magnetism",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module covers the fundamentals of electricity and magnetism: electric fields, electric flux and Gauss's law, electric potential; capacitance, dielectrics, current and resistance; DC circuits; magnetic fields, magnetic effect of currents, Ampere's law, electromagnetic induction; AC circuits; magnetism in matter; electromagnetic waves. The module also has a practical component consisting of five experiments designed to enhance students' understanding of some of the concepts discussed in lectures. This module is targeted at science students who wish to acquire a working knowledge in electricity and magnetism, and is an essential for physics majors.",
    "preclusion" : "Students who have passed PC1432/PC1432X are not allowed to take this module.",
    "prerequisite" : "‘A' level or H2 pass in Physics or PC1221/PC1221FC/PC1221X & PC1222/PC1222X"
  },
  "CP5104" : {
    "moduleCode" : "CP5104",
    "title" : "Graduate Project in Computing",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "The objective of this project module is to allow graduate students an opportunity to undertake a substantial project work over a semester. Students may work individually on projects proposed by staff, possibly in collaboration with\nexternal companies. The students will have good opportunity to apply what they have learnt to some technical challenges or practical problems, be it researchoriented or software-development. The project will be assessed through a written project report and will be letter-graded.",
    "preclusion" : "CP5101",
    "prerequisite" : "Student must be enrolled in a postgraduate programme."
  },
  "PC1144" : {
    "moduleCode" : "PC1144",
    "title" : "Introduction to Modern Physics",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module introduces the ideas of modern physics to students, with an emphasis on conceptual understanding. Topics covered are a) Einstein's theory of special relativity, including time dilation, length contraction, and his famous equation E=mc2, b) Quantum physics, where the observed phenomena of black body radiation, the photoelectric effect and Compton scattering, leading to the quantization of angular momentum and energy, atomic transitions and atomic spectra, c) Introduction to quantum mechanics, introducing the Heisenberg uncertainty principle, wave-mechanics and wave particle duality, and the use of wavefunctions in predicting the behaviour of particles trapped in potential wells, d) Nuclear physics, introducing radioactivity and decay processes, nuclear interaction and binding energy, fission and fusion, and e) Sub-atomic elementary particles and their classification. The module is targeted at science students who are interested in learning about the more recent developments in physics, and is an essential for physics majors.",
    "preclusion" : "Students who have passed PC1432/PC1432X are not allowed to take this module.",
    "prerequisite" : "‘A' level or H2 pass in Physics or PC1221/PC1221FC/PC1221X & PC1222/PC1222X"
  },
  "PC1141" : {
    "moduleCode" : "PC1141",
    "title" : "Introduction to Classical Mechanics",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module presents the fundamental principles of classical mechanics. It covers such topics as kinematics, Galilean transformation, Newton's laws of motion, dynamics of a particle with generalization to many particle systems, conservation laws, collisions, angular momentum and torque, motion of a rigid body, gravitation and planetary motion, static equilibrium, oscillatory motion and vibrational modes, waves, Doppler's effect and fluid mechanics. The module also has a practical component consisting of five experiments designed to enhance students' understanding of some of the concepts discussed in lectures. This module is targeted at science students who wish to acquire a working knowledge of mechanics, and is an essential for physics majors.",
    "preclusion" : "STUDENTS WHO HAVE PASSED PC1431 OR PC1431FC or PC1431X OR PC1433 ARE NOT ALLOWED TO TAKE THIS MODULE.",
    "prerequisite" : "‘A' level or H2 pass in Physics or PC1221/PC1221FC/PC1221X & PC1222/PC1222X"
  },
  "CM1417" : {
    "moduleCode" : "CM1417",
    "title" : "Fundamentals of Chemistry",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "The objective of this module is to provide an introduction to the fundamental topics and concepts of chemistry. This includes topics like structure of matter, periodicity and the periodic table, chemical Bonding, states of matter, stoichiometry and equilibrium, reaction types, kinetics, organic chemistry, including such topics as functional groups and isomerism.",
    "preclusion" : "A level or H2 Chemistry or equivalent or CM1417X",
    "prerequisite" : "'O' Level pass in Chemistry or equivalent"
  },
  "PC1142" : {
    "moduleCode" : "PC1142",
    "title" : "Introduction to Thermodynamics and Optics",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module covers the fundamentals of two branches of physics: thermodynamics and optics. Its aim is to prepare students for a host of more advanced modules in these and related areas. Topics included in the part on thermodynamics are thermal processes and effects, the first and second laws, kinetic theory of gases, heat engines and entropy. The part on optics encompasses topics such as geometric optics, systems of lenses, optical instruments, interference, diffraction, grating and polarization. The module also has a practical component consisting of five experiments designed to enhance students' understanding of some of the concepts discussed in lectures. This module is targeted at science students who wish to acquire a working knowledge of thermodynamics and optics, and is an essential for physics majors.",
    "preclusion" : "STUDENTS WHO HAVE PASSED PC1431 OR PC1431FC or PC1431X ARE NOT ALLOWED TO TAKE THIS MODULE.",
    "prerequisite" : "‘A' level or H2 pass in Physics or PC1221/PC1221FC/PC1221X & PC1222/PC1222X"
  },
  "CP3201" : {
    "moduleCode" : "CP3201",
    "title" : "Industry Seminar",
    "moduleCredit" : "2",
    "semesters" : [ 1 ],
    "description" : "The information technology (IT) industry is in an everchanging state of evolvement and innovation. This module aims to acquaint students with the latest Information\nTechnology (IT) innovation, practices, and developments. Prominent leaders and practitioners in the IT industry will be invited to impart their knowledge and insights into the latest IT trends and developments from various industry arenas such as the finance, healthcare, consulting, manufacturing, and entertainment industries. Students' performance will be graded as \"Completed Satisfactory/Completed Unsatisfactory (CS/CU)\" at the end of the module based on the coursework.",
    "preclusion" : null,
    "prerequisite" : "Students can only take this module after completing 70 MCs"
  },
  "CP5101" : {
    "moduleCode" : "CP5101",
    "title" : "MComp Dissertation",
    "moduleCredit" : "16",
    "semesters" : [ 1, 2 ],
    "description" : "The dissertation option gives individual students the opportunity for independent study and research in the area of their selected specialization. This will be carried out under the supervision of an academic staff, and the selection of the topic/area will be done in consultation with the supervisor in the area of expertise.",
    "preclusion" : "- CP5102 (MComp Information Security Project - 8MC)\n- CP5103 (Master of Computing Project – 8MC)\n- CP5104 (Graduate Project in Computing – 4MC)",
    "prerequisite" : null
  },
  "CP5102" : {
    "moduleCode" : "CP5102",
    "title" : "MComp Information Security Project",
    "moduleCredit" : "8",
    "semesters" : [ 1, 2 ],
    "description" : "The exploratory project option gives individual students the opportunity for independent study and research in the area of their selected specialization. This will be carried out under the supervision of an academic staff, in possible cosupervision with a mentor from the industry or government agency. The selection of the topic/area will be done in consultation with the supervisor and the external mentor. All projects will be vetted by School of Computing Postgraduate Office.",
    "preclusion" : null,
    "prerequisite" : "Students must be in Master of Computing programme, Infocomm Security specialisation"
  },
  "CM1121" : {
    "moduleCode" : "CM1121",
    "title" : "Organic Chemistry 1",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module covers the characteristic properties, methods of preparation, and reactions of alkanes/cycloalkanes, alkenes, alkynes, benzene and other aromatic compounds, alkyl halides; alcohols; ethers; epoxides, phenols, aldehydes and ketones; carboxylic acids and their derivatives; amines.",
    "preclusion" : "CM1501 or CM1503 or CM1401",
    "prerequisite" : "'A' level or H2 pass in Chemistry or equivalent or CM1417/CM1417X"
  },
  "CS2040C" : {
    "moduleCode" : "CS2040C",
    "title" : "Data Structures and Algorithms",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces students to the design and implementation of fundamental data structures and algorithms. The module covers basic data structures (linked lists, stacks, queues, hash tables, binary heaps, trees, and graphs), searching and sorting algorithms, basic analysis of algorithms, and basic object-oriented programming concepts.",
    "preclusion" : "CS1020, CS1020E, CS2020, CS2010, CS2040, CS2040S",
    "prerequisite" : "CS1010 or its equivalent"
  },
  "CP3108A" : {
    "moduleCode" : "CP3108A",
    "title" : "Independent Work",
    "moduleCredit" : "2",
    "semesters" : [ 1, 2 ],
    "description" : "",
    "preclusion" : "CS3108A",
    "prerequisite" : null
  },
  "CP3108B" : {
    "moduleCode" : "CP3108B",
    "title" : "Independent Work",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "",
    "preclusion" : "CS3108B",
    "prerequisite" : null
  },
  "CS4218" : {
    "moduleCode" : "CS4218",
    "title" : "Software Testing",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module covers the concepts and practice of software testing including unit testing, integration testing, and regression testing. Various testing coverage criteria will be discussed. Debugging methods for finding the root-cause of errors in failing test cases will also be investigated. The use of testing and analysis for performance prediction, performance clustering and performance debugging will be studied. Students will acquire crucial skills on testing and debugging through hands-on assignments.",
    "preclusion" : null,
    "prerequisite" : "CS3219 Software Engineering Principles and Patterns."
  },
  "CS3247" : {
    "moduleCode" : "CS3247",
    "title" : "Game Development",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "The objective of this module is to introduce techniques for electronic game design and programming. This module covers a range of important topics including 3D maths, game physics, game AI, sound, as well as user interface for computer games. Furthermore, it will give an overview of computer game design to the students. Through laboratory programming exercises, the students will have hands-on programming experience with popular game engines and will develop basic games using those engines.",
    "preclusion" : null,
    "prerequisite" : "CS3241"
  },
  "CS4215" : {
    "moduleCode" : "CS4215",
    "title" : "Programming Language Implementation",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module provides the students with theoretical knowledge and practical skill in the implementation of programming languages. It discusses implementation aspects of fundamental programming paradigms (imperative, functional and object-oriented), and of basic programming language concepts such as binding, scope, parameter-passing mechanisms and types. It introduces the language processing techniques of interpretation and compilation and virtual machines. The lectures are accompanied by lab sessions which will focus on language processing tools, and take the student through a sequence of programming language implementations. This modules\nalso covers automatic memory management, dynamic linking and just-in-time compilation, as features of modern execution systems.",
    "preclusion" : null,
    "prerequisite" : "(CS2010 or its equivalent) or CS2020 or (((CS2030 or its equivalent) or CS2113/T) and ((CS2040 or its equivalent)))"
  },
  "CS5425" : {
    "moduleCode" : "CS5425",
    "title" : "Big Data Systems for Data Science",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "Data science incorporates varying elements and builds on techniques and theories from many fields, including statistics, data engineering, data mining, visualization, data warehousing, and high-performance computing systems with the goal of extracting meaning from big data and creating data products. Data science needs advanced computing systems such as Apache Hadoop and Spark to address big data challenges. In this module, students will learn various computing systems and optimization techniques that are used in data science with emphasis on the system building and algorithmic optimizations of these techniques.",
    "preclusion" : "BT4221 and CS4225",
    "prerequisite" : "CS2102"
  },
  "CS3245" : {
    "moduleCode" : "CS3245",
    "title" : "Information Retrieval",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module discusses the basic concepts and methods of information retrieval including capturing, representing, storing, organizing, and retrieving unstructured or loosely structured information. The most well-known aspect of information retrieval is document retrieval: the process of indexing and retrieving text documents. However, the field of information retrieval includes almost any type of\nunstructured or semi-structured data, including newswire stories, transcribed speech, email, blogs, images, or video. Therefore, information retrieval is a critical aspect of Web search engines. This module also serves as the foundation for subsequent modules on the understanding, processing and retrieval of particular web media.",
    "preclusion" : null,
    "prerequisite" : "(CS2010 or its equivalent) or CS2020 or (CS2040 or its equivalent)"
  },
  "CS5424" : {
    "moduleCode" : "CS5424",
    "title" : "Distributed Databases",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module studies the management of data in a distributed environment. It covers the fundamental principles of distributed data management and includes distribution design, data integration, distributed query processing and optimization, distributed transaction management, and replication. It will also look at how these techniques can be adapted to support database management in emerging technologies (e.g., parallel systems, peer-to-peer systems, cloud computing).",
    "preclusion" : "CS4224",
    "prerequisite" : "CS3223"
  },
  "CS3243" : {
    "moduleCode" : "CS3243",
    "title" : "Introduction to Artificial Intelligence",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "The module introduces the basic concepts in search and knowledge representation as well as to a number of sub-areas of artificial intelligence. It focuses on covering the essential concepts in AI. The module covers Turing test, blind search, iterative deepening, production systems, heuristic search, A* algorithm, minimax and alpha-beta procedures, predicate and first-order logic, resolution refutation, non-monotonic reasoning, assumption-based truth maintenance systems, inheritance hierarchies, the frame problem, certainly factors, Bayes' rule, frames and semantic nets, planning, learning, natural language, vision, and expert systems and LISP.",
    "preclusion" : "EEE and CPE students can only take this module as a technical elective to satisfy the program requirements or UEM but not CFM/ULR-Breadth.",
    "prerequisite" : "((CS2010 or its equivalent) or CS2020 or (CS2040 or its equivalent))\nand (MA1100 or (CS1231 or its equivalent))"
  },
  "CS4211" : {
    "moduleCode" : "CS4211",
    "title" : "Formal Methods for Software Engineering",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "Before software can be designed, its requirements must be well understood. This in turns requires a thorough understanding of the application domain. Based on the requirements, software engineers construct design models, and then use these design models as guide to construct software implementations. This module will cover formal specification and verification techniques for accurately capturing and reasoning about requirements, model and code. The topics covered include modeling notations, temporal logics, model checking, software model checking, theorem proving, and symbolic execution based analysis. Most importantly, the module will attempt to inculcate an appreciation and understanding of formal thinking in software design and construction.",
    "preclusion" : null,
    "prerequisite" : "CS2103 or its equivalent"
  },
  "CS5422" : {
    "moduleCode" : "CS5422",
    "title" : "Wireless Networking",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module aims to provide solid foundation for students in the area of wireless networks and introduces students to the emerging area of cyber-physical-system/Internet-of-Things. The module will cover wireless networking across all layers of the networking stack including physical, link, MAC, routing and application layers. Different network technologies with different characteristic will also be covered, including cellular networks, Wi-Fi, Bluetooth and ZigBee. Some key concepts that cut across all layers and network types are mobility management, energy efficiency, and integration of sensing and communications. The module emphasizes on exposing students to practical network system issues through building software prototypes.",
    "preclusion" : "CS4222",
    "prerequisite" : "(CS2105 or EE3204/E or EE4204) and \n(EE2012/A or MA2216 or ST2131 or ST2334)"
  },
  "CS3244" : {
    "moduleCode" : "CS3244",
    "title" : "Machine Learning",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces basic concepts and algorithms in machine learning and neural networks. The main reason for studying computational learning is to make better use of powerful computers to learn knowledge (or regularities) from the raw data. The ultimate objective is to build self-learning systems to relieve human from some of already-too-many programming tasks. At the end of the course, students are expected to be familiar with the theories and paradigms of computational learning, and capable of implementing basic learning systems.",
    "preclusion" : "BT4240, DMX1401AI or its equivalents, IT3011",
    "prerequisite" : "(CS2010 or CS2020 or CS2040 or its equivalent) and \n(MA1101R or MA1311 or MA1508E or MA1513) and \n(MA1102R or MA1505 or MA1507 or (MA1511 and MA1512) or MA1521) and \n(EE2012/A or MA2216 or ST2131 or ST2334)"
  },
  "CS4212" : {
    "moduleCode" : "CS4212",
    "title" : "Compiler Design",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "The objective of this module is to introduce the principal ideas behind program compilation, and discusses various techniques for program parsing, program analysis, program optimisation, and run-time organisation required for program execution. Topics covered include regular expressions, context-free grammars, lexical analysis, syntax analysis; different algorithms for parsing codes, such as top-down parsing, bottom-up parsing; translation to abstract syntax using modern parser generator technology, intermediate representation, semantics analysis, type system, un-optimised code generation, code optimisation, data-flow analysis, instruction scheduling.",
    "preclusion" : null,
    "prerequisite" : "CS2104 Programming Language"
  },
  "CS5421" : {
    "moduleCode" : "CS5421",
    "title" : "Database Applications Design and Tuning",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module addresses the design and performance tuning of database applications. The syllabus focuses on relational database applications implemented with relational database management systems. Topics covered include normalisation theory (functional, multi-valued and join dependency, normal forms, decomposition and synthesis methods), entity relationship approach and SQL tuning (performance evaluation, execution plan verification, indexing, de-normalization, code level and transactions tuning). The syllabus optionally includes selected topics in the technologies, design and performance tuning of nonrelational database applications (for instance, network and hierarchical models and nested relational model for an historical perspective, as well as XML and NoSQL systems for a modern perspective).",
    "preclusion" : "CS4221",
    "prerequisite" : "CS3223"
  },
  "CS6235" : {
    "moduleCode" : "CS6235",
    "title" : "Advanced Topics in Theoretical Computer Science",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This graduate-level module covers advanced topics in the theoretical aspects of computer science that are of current research or application interests. Topics falling under this module include algorithms, theory of computation, formal models, and semantics. The exact topic may vary from year to year and depends on the instructor teaching the module. Upon completion of this module, the student will\nhave a deeper understanding on some of the latest research problems in one of the areas of theoretical computer science. This module will help prepare students towards doing research in theoretical computer science.",
    "preclusion" : null,
    "prerequisite" : "CS3230"
  },
  "CS3241" : {
    "moduleCode" : "CS3241",
    "title" : "Computer Graphics",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module teaches some graphics hardware devices, reviews the mathematics related to the understanding, and discusses the fundamental areas of computer graphics. After completing the course, students are expected to understand the basic computer graphics terminology and concepts, and to be able to design and implement simple 2D and 3D interactive computer graphics related programs. As an enrichment part of the course, students are introduced the state-of-the-art development in computer graphics by viewing interesting video clips and experimenting with demo program made available in the course web.",
    "preclusion" : "EEE and CPE students can only take this module as a technical elective to satisfy the program requirements or UEM but not CFM/ULR-Breadth.",
    "prerequisite" : "(CS2010 or its equivalent) or CS2020 or (((CS2030 or its equivalent) or CS2113/T) and ((CS2040 or its equivalent)))"
  },
  "CS6234" : {
    "moduleCode" : "CS6234",
    "title" : "Advanced Algorithms",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module is aimed at graduate students who are doing or intend to do advanced research in algorithms design and analysis in all areas of computer science. The module covers advanced material on combinatorial and graph algorithms with emphasis on efficient algorithms, and explores their use in a variety of application areas. Topics covered include, but are not restricted to, linear programming, graph matching and network flows, approximation algorithms, randomized algorithms, online algorithms, local search algorithms, algorithms for large datasets. The module will be a seminar-based module that will expose students to current research in these areas.",
    "preclusion" : null,
    "prerequisite" : "CS5234"
  },
  "CS3242" : {
    "moduleCode" : "CS3242",
    "title" : "3D Modeling and Animation",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module aims to provide fundamental concepts in 3D modeling and animation. It also serves as a bridge to advanced media modules. After taking this module, students should be able to use these concepts to easily build or work with digital models, manipulate the models by means of computer deformation and animation, and use lighting and rendering techniques to create appealing scenes. Topics include coordinate spaces, transforms, 3D model representations, hierarchical structures, deformation, procedural modelling, particle systems, character animation, shading networks, lighting, and scripting concepts.",
    "preclusion" : "CS4342",
    "prerequisite" : "CS3241 and (PC1221 or PC1221X) and \n(MA1101R or MA1311 or MA1508E or MA1513) and \n(MA1102R or MA1505 or MA1507 or (MA1511 and MA1512) or MA1521)"
  },
  "CS3240" : {
    "moduleCode" : "CS3240",
    "title" : "Interaction Design",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This course is intended for students in computing and related disciplines whose work focuses on human-computer interaction issues in the design of computer systems. The course stresses the importance of user-centred design and usability in the development of computer applications and systems. Students will be taken through the analysis, design, development, and evaluation of human-computer interaction methods for computer systems. They will acquire hands-on design skills through laboratory exercises and assignments. The course also covers HCI design principles and emphasizes the importance of contextual, organisational, and social factors in system design.",
    "preclusion" : null,
    "prerequisite" : "(CS1020 or its equivalent) or CS2020 or (CS2030 or its equivalent) or CS2113/T or NM3209 or NM2207/Y"
  },
  "CS6231" : {
    "moduleCode" : "CS6231",
    "title" : "Advanced Topics in Security and Privacy",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module aims to prepare PhD students for research in security and privacy, by investigating security issues in various theoretical as well as system computer science areas such as software, networks, data analytics and machine learning, etc. It addresses security and privacy concepts and design principles from an adversarial perspective. Selected topics in security and privacy are covered, such as software security, applied cryptography, privacy-preserving data analysis, and design of secure distributed systems. Emerging topics of current research interests may be included as well.",
    "preclusion" : null,
    "prerequisite" : "CS4236 Cryptography Theory and Practice or \nCS3235 Computer Security or \nCS5231 System Security."
  },
  "CS2030" : {
    "moduleCode" : "CS2030",
    "title" : "Programming Methodology II",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module is a follow up to CS1010. It explores two modern programming paradigms, object-oriented programming and functional programming. Through a series of integrated assignments, students will learn to develop medium-scale software programs in the order of thousands of lines of code and tens of classes using objectoriented design principles and advanced programming constructs available in the two paradigms. Topics include\nobjects and classes, composition, association, inheritance, interface, polymorphism, abstract classes, dynamic binding, lambda expression, effect-free programming, first class functions, closures, continuations, monad, etc.",
    "preclusion" : "CS2030S",
    "prerequisite" : "CS1010 or its equivalent"
  },
  "IS1103" : {
    "moduleCode" : "IS1103",
    "title" : "Ethics in Computing",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module gives an introduction to Ethics in the Computing domain. Students will learn about the importance of Ethics in Computing policy-making and be able to make judgements and decisions based on established ethical frameworks (such as Deontology, Consequentialism, Social Contract Theory and Virtue Ethics). The objective is to develop students to be ethical computing decision-makers who can analyse and explain their decisions in real-world policy-making situations. Issues in emerging areas such as Digital Intellectual Property Rights, Artificial Intelligence, Big Data, Social Media, Hacking, and interface design may also be discussed in relation to Ethics.",
    "preclusion" : null,
    "prerequisite" : null
  },
  "CS5260" : {
    "moduleCode" : "CS5260",
    "title" : "Neural Networks and Deep Learning II",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module is a follow-up to CS5242 and covers\nadvanced topics in neural networks and deep learning.\nThis module explores the underlying mechanism of a\nvariety of different types of learning models: unsupervised,\nsemi-supervised, and adversarial learning models, that\nare not covered in CS5242. Topics may include:\ngenerative adversarial networks, adversarial machine\nlearning, zero-shot learning, geometric deep learning,\nneural architecture search.",
    "preclusion" : null,
    "prerequisite" : "CS5242 Neural Networks and Deep Learning"
  },
  "PC1432" : {
    "moduleCode" : "PC1432",
    "title" : "Physics IIE",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces fundamental concepts of physics and is illustrated with many practical examples. Topics covered include a) Electricity and magnetism, where the basic concepts of electric and magnetic fields, forces on charged particles, electric potential, electromotive force, work and energy, are described. The properties of basic electrical circuits comprising resistors, inductors and capacitors are discussed, along with analysis of their transient and steady-state behaviour. Understanding the role of Maxwell's equations in electromagnetism is emphasized; b) Waves, introducing properties of waves, including geometric optics, propagation, interference and diffraction, and electromagnetic waves; and c) Quantum physics, where new physics concepts which led to the quantization of energy are introduced, leading to an explanation of atomic transitions, atomic spectra and the physical and the chemical properties of the atom. The uncertainty principle, wave-mechanics and wave particle duality concepts are covered, together with the use of wavefunctions in predicting the behaviour of trapped particles. The module is targeted essentially at Engineering students.",
    "preclusion" : "Students majoring in Physics or students who have passed in PC1143 or PC1144 or PC1432X are not allowed to take this module.",
    "prerequisite" : "Students from FOE ( i.e. Computer Eng, Common Engineering, Bioengineering, Industrial & Systems Eng and Material Science & Eng) with ‘A’ level or H2 pass in Physics; or 'A' level or H2 pass in Physics; or PC1221/PC1221FC/PC1221X & PC1222/PC1222X"
  },
  "LSM1106" : {
    "moduleCode" : "LSM1106",
    "title" : "Molecular Cell Biology",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "The objective is to provide the student with a firm and rigorous foundation in current concepts of the structure and functions of biomolecules in molecular cellular biology. These fundamental concepts form the basis of almost all recent advances in biological and the biomedical sciences. The lectures will introduce various cellular organelles as models to gain insights into how structures and functions of classes of biomolecules participating in important cellular processes.",
    "preclusion" : "LSM1101",
    "prerequisite" : "GCE ‘A’ Level or H2 Biology or equivalent, or LSM1301 or LSM1301X"
  },
  "LSM1105" : {
    "moduleCode" : "LSM1105",
    "title" : "Evolutionary Biology",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "Evolutionary biology covers the history of life on our planet and the processes that produced the multiple life forms of Earth. Topics include: the origins of life, the eukaryotic cell, and multicellularity; the generation of genetic variation and the sorting of that variation through random processes and through natural and sexual selection; the origin of new traits, new life histories, and new species; the origins of sex, sociality, and altruism; the evolution of humans; and applications of evolutionary biology to solving modern-day problems.",
    "preclusion" : "YSC2216",
    "prerequisite" : "GCE 'A' Level or H2 Biology or equivalent, or LSM1301 or LSM1301X"
  },
  "CS1010X" : {
    "moduleCode" : "CS1010X",
    "title" : "Programming Methodology",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing and is equivalent to CS1010, CS1010S and CS1010E Programming Methodology. The module will be taught using the Python programming language and topics covered include problem solving by computing, writing pseudo-codes, basic problem formulation and problem solving, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures: arrays, strings and structures, simple file processing, and basic recursion.",
    "preclusion" : "CS1010 or its equivalent, CS1010FC",
    "prerequisite" : null
  },
  "CS2309" : {
    "moduleCode" : "CS2309",
    "title" : "CS Research Methodology",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "",
    "preclusion" : "CS2305S",
    "prerequisite" : "(CS2010 or its equivalent) or CS2020 or ((CS2030 or its equivalent) or CS2113/T) and (CS2040 or its equivalent))\nand \n(MA1100 or (CS1231 or its equivalent))"
  },
  "LSM1102" : {
    "moduleCode" : "LSM1102",
    "title" : "Molecular Genetics",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module covers topics on (i) the patterns of inheritance, (ii) the molecular properties of genes and chromosomes, (iii) transcription and translation, (iv) genetic methods and technology, and (v) genetic analysis of individuals and populations. This will include an in-depth understanding of mendelian patterns of inheritance and variations that could occur due to multiple alleles, lethal genes, chromosomal variations, linkage, gene interaction and other genetic phenomena. Emphasis is placed on the understanding of the underlying molecular and biochemical basis of inheritance. Quantitative and population genetics will also be discussed with the emphasis of understanding the processes and forces in nature that promote genetic changes.",
    "preclusion" : "YSC2233",
    "prerequisite" : "GCE 'A' Level or H2 Biology or equivalent, or LSM1301 or LSM1301X"
  },
  "CS1010R" : {
    "moduleCode" : "CS1010R",
    "title" : "Programming Methodology",
    "moduleCredit" : "1",
    "semesters" : [ 1 ],
    "description" : "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.",
    "preclusion" : "CG1101, CS1010, CS1010E, CS1101, CS1101C, CZ1102, IT1002, Engineering students",
    "prerequisite" : "Co-read with host module in current semester or pass host module in previous semester. Student selection process is enforced."
  },
  "CS1010S" : {
    "moduleCode" : "CS1010S",
    "title" : "Programming Methodology",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and \nforemost introductory course to computing and is equivalent to CS1010 and CS1010E Programming Methodology. Topics covered include problem solving by computing, writing pseudo-codes, basic problem formulation and problem solving, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures: arrays, strings and structures, simple file processing, and basic recursion. This module is appropriate for FoS students.",
    "preclusion" : "CS1010, CS1010E, CS1010J, CS1010X, CS1010XCP, CS1101S",
    "prerequisite" : null
  },
  "CS3236" : {
    "moduleCode" : "CS3236",
    "title" : "Introduction to Information Theory",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module introduces the basics of modern information theory. It covers how information can be quantified, and what this quantification tells us about how well we can compress and transmit information without error. It discusses basic error correcting techniques, and information-theoretic cryptography. Topics covered\ninclude: mathematical techniques, entropy measures, fundamental limits to data compression and noisy-channel coding, examples of error-correcting codes, examples of information theoretic cryptography (commitments, secure computation, key distribution, randomness extraction).",
    "preclusion" : null,
    "prerequisite" : "(MA1100 or (CS1231 or its equivalent)) and \n(EE2012/A or MA2216 or ST2131 or ST2334)"
  },
  "CS3237" : {
    "moduleCode" : "CS3237",
    "title" : "Introduction to Internet of Things",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "The Internet of Things (IoT), where a large number of physical objects embedded with computing power and sensors connect to the network for seamless cooperation between the cyber domain and the physical world, is revolutionizing our lives. This module will serve as an introduction to the IoT and provide a holistic view of the entire spectrum of the IoT system architecture from the devices to the fog and the cloud computing. The focus will be on designing IoT systems that balance both the functional and non-functional (communication bandwidth, security, safety, power) requirements. The module will have a significant project component.",
    "preclusion" : null,
    "prerequisite" : "(CS1010 or equivalent) and (CG2028 or CS2100 or EE2024 or EE2028)"
  },
  "CS3234" : {
    "moduleCode" : "CS3234",
    "title" : "Logic for Proofs and Programs",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module introduces logic as a means for specifying and solving computational problems. It explores how logic can be used to represent computational problems, how these representations can be proven correct, and how they can be executed on a computer. Students learn about logic as formal systems (semantic, axiomatic, and deductive) and how to write proofs in the different systems. They also learn how to use a proof assistant such as Coq and how to program in a logic programming language such as Prolog.  Topics include classical and intuitionistic logic, SAT, Peano’s axioms, Hoare logic, and other selected logic systems.",
    "preclusion" : null,
    "prerequisite" : "MA1100 or (CS1231 or its equivalent); Programming experience is preferred."
  },
  "CS3235" : {
    "moduleCode" : "CS3235",
    "title" : "Computer Security",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "The objective of this module is to provide a broad understanding of computer security with some indepth discussions on selected topics in system and network security. This module covers the following topics: intrusion detection, DNS security, electronic mail security, authentication, access control, buffer overflow, memory and stack protection, selected topics in application security, for instance, web security, and well-known attacks.",
    "preclusion" : null,
    "prerequisite" : "(CS2105 or EE3204 or EE4204) and (CS2106 or CG2271) and CS2107"
  },
  "CS3241R" : {
    "moduleCode" : "CS3241R",
    "title" : "Computer Graphics",
    "moduleCredit" : "1",
    "semesters" : [ 1 ],
    "description" : "This module teaches some graphics hardware devices, reviews the mathematics related to the understanding, and discusses the fundamental areas of computer graphics. After completing the course, students are expected to understand the basic computer graphics terminology and concepts, and to be able to design and implement simple 2D and 3D interactive computer graphics related programs. As an enrichment part of the course, students are introduced the state-of-the-art development in computer graphics by viewing interesting video clips and experimenting with demo program made available in the course web.",
    "preclusion" : null,
    "prerequisite" : "Co-read with host module in current semester or pass host module in previous semester. Student selection process is enforced."
  },
  "CS3233" : {
    "moduleCode" : "CS3233",
    "title" : "Competitive Programming",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module aims to prepare students in competitive problem solving. It covers techniques for attacking and solving challenging computational problems. Fundamental algorithmic solving techniques covered include divide and conquer, greedy, dynamic programming, backtracking and branch and bound. Domain specific techniques like number theory, computational geometry, string processing and graph theoretic will also be covered. Advanced AI search techniques like iterative deepening, A* and heuristic search will be included.  The module also covers algorithmic and programming language toolkits used in problem solving supported by the solution of representative or well-known problems in the various algorithmic paradigms.",
    "preclusion" : null,
    "prerequisite" : "At least grade A- in (CS2010 or CS2020 or (both CS2030 and CS2040)) or special permission"
  },
  "CS2030S" : {
    "moduleCode" : "CS2030S",
    "title" : "Programming Methodology II",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module is a follow up to CS1010. It explores two modern programming paradigms, object-oriented programming and functional programming. Through a series of integrated assignments, students will learn to develop medium-scale software programs in the order of thousands of lines of code and tens of classes using object-oriented design principles and advanced programming constructs available in the two paradigms. Topics include objects and classes, composition, association, inheritance, interface, polymorphism, abstract classes, dynamic binding, lambda expression, effect-free programming, first class functions, closures, continuations, monad, etc.",
    "preclusion" : "CS2030",
    "prerequisite" : "CS1010 or its equivalent"
  },
  "CS3230" : {
    "moduleCode" : "CS3230",
    "title" : "Design and Analysis of Algorithms",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces different techniques of designing and analysing algorithms. Students will learn about the framework for algorithm analysis, for example, lower bound arguments, average case analysis, and the theory of NP-completeness. In addition, students are exposed to various algorithm design paradigms. The module serves two purposes: to improve the students' ability to design algorithms in different areas, and to prepare students for the study of more advanced algorithms. The module covers lower and upper bounds, recurrences, basic algorithm paradigms (such as prune-and-search, dynamic programming, branch-and-bound, graph traversal, and randomised approaches), amortized analysis, NP-completeness, and some selected advanced topics.",
    "preclusion" : "EEE and CPE students can only take this module as a technical elective to satisfy the program requirements or UEM but not CFM/ULR-Breadth.",
    "prerequisite" : "((CS2010 or its equivalent) or CS2020 or (CS2040 or its equivalent)) and (MA1100 or (CS1231 or its equivalent))"
  },
  "CP6010" : {
    "moduleCode" : "CP6010",
    "title" : "Doctoral Seminar",
    "moduleCredit" : "0",
    "semesters" : [ 1, 2 ],
    "description" : "A PhD candidate will be required to give a Doctoral Seminar within 12 months after passing his/her PhD Thesis Proposal.  The seminar, which should include any research findings or work from published papers.",
    "preclusion" : null,
    "prerequisite" : null
  },
  "CS6101" : {
    "moduleCode" : "CS6101",
    "title" : "Exploration of Computer Science Research",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces CS graduate students to various research areas in Computer Science. Study groups are organised for major research areas. Each study group provides a forum for students to read, present and discuss\nresearch papers, and acquire the basic research skills for literature review and critical comparison of existing work. Students will also gain a first experience in technical presentation and writing. This module will be graded as “Completed Satisfactory” or “Completed Unsatisfactory” (CS/CU).",
    "preclusion" : null,
    "prerequisite" : null
  },
  "DMC1401CS" : {
    "moduleCode" : "DMC1401CS",
    "title" : "Design Your Own Module",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "",
    "preclusion" : null,
    "prerequisite" : null
  },
  "CS6220" : {
    "moduleCode" : "CS6220",
    "title" : "Advanced Topics in Data Mining",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "With the rapid advances of computer and internet technologies, a large amount of data accumulates. Discovering knowledge from the data will give us a competitive advantage. The process of knowledge discovery involves pre-processing the data, mining or discovering patterns from the data, and post-processing the discovered patterns. In this course, we will review and examine the present techniques and the theories behind them and explore new and improved techniques for real world knowledge discovery applications. The course is designed to encourage active discussion, creative thinking, and hands-on project development.",
    "preclusion" : null,
    "prerequisite" : "CS5228"
  },
  "CS5250" : {
    "moduleCode" : "CS5250",
    "title" : "Advanced Operating Systems",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "The module covers a broad range of issues in the design and implementation of modern advanced operating systems. The topics covered in this module includes OS design strategies (including microkernels, mobile, embedded and real-time operating systems and the component’s interfaces), priority and resource allocation strategies; scheduling algorithms (including for multi-core, multi-processors); naming, protection and security; UI and windowing systems; file system implementations (including network and distributed file systems); failure and recovery; and virtualization and the Internet-ready OS. They extend and provide in-depth coverage of material in earlier prerequisite OS modules.",
    "preclusion" : null,
    "prerequisite" : "CS2106 Introduction to Operating Systems or CG2271\nReal-Time Operating Systems"
  },
  "CP2106" : {
    "moduleCode" : "CP2106",
    "title" : "Independent Software Development Project (Orbital)",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "Orbital provides a platform for students to gain hands-on industrial experience for computing technologies related to students’ own interests. Done in pairs of two, Orbital students propose, design, execute, implement and market their project to peers and faculty. Peer assessment and critique of others’ projects are key components of the modules’ deliverables.",
    "preclusion" : "CS2103 Software Engineering or its equivalent",
    "prerequisite" : "CS1010 Programming Methodology or its equivalent"
  },
  "CS6219" : {
    "moduleCode" : "CS6219",
    "title" : "Advanced Topics in Computer Systems",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This graduate-level module covers advanced topics in computer systems that are of current research or application interests. Topics include operating systems,\nsystems architecture and hardware, distributed systems, computer networks, and the interaction between these areas. The exact topics to be taught will depend on the lecturers teaching the module. Upon completion of this module, the student will have a deeper understanding on some of the latest research problems in the area of computer systems, as well as the state-of-the-art approaches to address the problems. This module will help prepare students towards doing research in computer systems.",
    "preclusion" : null,
    "prerequisite" : "CS2105 and CS2106"
  },
  "CS3223" : {
    "moduleCode" : "CS3223",
    "title" : "Database Systems Implementation",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This system-oriented module provides an in-depth study of the concepts and implementation issues related to database management systems. It first covers the physical implementation of the relational data model, which includes storage management, access methods, query processing, and optimisation. Then it covers issues and techniques dealing with multi-user application environments, namely, transactions, concurrency control, and recovery. The third part covers advanced topics such as on-line analytical processing, in-memory databases, and column stores.",
    "preclusion" : null,
    "prerequisite" : "((CS2010 or its equivalent) or CS2020 or (CS2040 or its equivalent)) and (CS2102 or IT2002)"
  },
  "CS6216" : {
    "moduleCode" : "CS6216",
    "title" : "Advanced Topics in Machine Learning",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This graduate level module covers advanced topics in\nmachine learning that are of current research or\napplication interests. The exact topics to be taught will\ndepend on the lecturers teaching the module. Upon\ncompletion of this module, the student will have a deeper\nunderstanding on some of the latest research problems in\nmachine learning as well as the state-of-the-art\napproaches and solutions. This module will help prepare\nstudents towards doing research in machine learning.",
    "preclusion" : null,
    "prerequisite" : "CS3244"
  },
  "CS3103" : {
    "moduleCode" : "CS3103",
    "title" : "Computer Networks Practice",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module aims to provide an opportunity for the students to learn commonly-used network protocols in greater technical depth with their implementation details than a basic networking course. Students will perform hands-on experiments in configuring and interconnecting LANs using networking devices/technologies (e.g., routers, switches, SDN switches, and hubs), networking protocols (e.g., DHCP, DNS, RIP, OSPF, ICMP, TCP, UDP, wireless LAN, VLAN protocols, SIP, SSL, IPSec-VPN) and networking tools (e.g, tcpdump, netstat, ping, traceroute). Students will learn higher-layer network protocols and develop network applications (client/server, P2P) via socket programming.",
    "preclusion" : null,
    "prerequisite" : "CS2105 or EE3204/E or EE4204"
  },
  "CS3230R" : {
    "moduleCode" : "CS3230R",
    "title" : "Design and Analysis of Algorithms",
    "moduleCredit" : "1",
    "semesters" : [ 1 ],
    "description" : "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.",
    "preclusion" : null,
    "prerequisite" : "Co-read host module. Student selection process is enforced."
  },
  "CS6215" : {
    "moduleCode" : "CS6215",
    "title" : "Advanced Topics in Program Analysis",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "Program analysis techniques allow one to automatically\nanalyse the behaviour of a computer program, to identify\nbugs and performance bottlenecks. This graduate level\nmodule covers advanced topics in program analysis that\nare of current research or application interests. Students\nwill explore the state-of-the-art techniques and systems for\nprogram analysis. After taking the module, students will\nbe able to apply advanced automated program analysis\ntools and techniques to verify, test, and debug programs,\nas well as be better prepared for conducting research in\nprogram analysis and apply them in related research\nareas.",
    "preclusion" : null,
    "prerequisite" : "CS3230 and CS4212"
  },
  "CS1010J" : {
    "moduleCode" : "CS1010J",
    "title" : "Programming Methodology",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing.  Topics covered include computational thinking and computational problem solving, designing and specifying an algorithm, basic problem formulation and problem solving approaches, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures (arrays, strings, composite data types), basic sorting, and recursion.",
    "preclusion" : "CS1010 and its equivalents",
    "prerequisite" : null
  },
  "CS4277" : {
    "moduleCode" : "CS4277",
    "title" : "3D Computer Vision",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "One of the most important capability for robots such as self-driving cars, domestic mobile robots, and drones to achieve full autonomy is the ability to perceive the 3D environment. A camera is an excellent choice as the main sensory device for robotic perception because it produces information-rich images, and is lightweight, low cost and requires little or no maintenance. This module covers the mathematical concepts and algorithms that allow us to recover the 3D geometry of the camera motions and the structures in its environment. Topics include projective geometry, camera model, one-/two-/three-/N-View reconstructions and stereo, generalized cameras and non- rigid structure-from-motion.",
    "preclusion" : "CS5477",
    "prerequisite" : "(MA1101R or MA1311 or MA1506 or MA1508E) and (CS2040 or its equivalent)"
  },
  "CS4278" : {
    "moduleCode" : "CS4278",
    "title" : "Intelligent Robots: Algorithms and Systems",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module introduces the core algorithms and system architectures of intelligent robots. It examines the main system components for sensing, decision making, and motion control and importantly, their integration for core robot capabilities, such as navigation and manipulation. It covers the key algorithms for robot intelligence through inference, planning, and learning, and also provides some practical experiences with modern robot systems. A variety of Illustrative examples are given, e.g., self-driving cars, aerial drones, and object manipulation.",
    "preclusion" : "CS5478",
    "prerequisite" : "CS3243 and (MA1101R or MA1311 or MA1508E) and (MA1102R or MA1505 or (MA1511 and MA1512) or MA1521) and (EE2012/A or ST2131 or ST2334)"
  },
  "CS6213" : {
    "moduleCode" : "CS6213",
    "title" : "Special Topics in Distributed Computing",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "",
    "preclusion" : null,
    "prerequisite" : "CS3211 or CS4231"
  },
  "CS4276" : {
    "moduleCode" : "CS4276",
    "title" : "IoT Security",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "With the advent of the Internet-of-Things, the computing paradigm is quickly changing from the traditional cyber domain to cyber-physical domain. This is made possible from devices that are equipped with sensors and actuators that interact with the physical world. In this module, we will investigate how such sensing systems affect the notion of computer security. We will also explore the state-of-the-art research in the areas of sensing systems and how they can provide benefits to the security of the Internet-of-Things. This module will also investigate how an attacker may compromise the sensing information to exploit security vulnerabilities in these systems.",
    "preclusion" : "CS5476",
    "prerequisite" : "CG3002 or CG4002 or CS3237"
  },
  "CS6211" : {
    "moduleCode" : "CS6211",
    "title" : "Analytical Performance Modelling for Computer Systems",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "Constructing simple mathematical models to describe a computer system can help in analysis and understanding of the characteristics, behaviour, and performance of the system. This module introduces students to the modelling techniques, commonly used models, applications of the models to performance modelling of computer systems, and experimental validation of the models. After completing the module, students are expected to have the confidence to construct, analyse, and validate a performance model for a computer system that they are interested in.",
    "preclusion" : null,
    "prerequisite" : "(ST2334 or ST2131) and CS2105 and CS2106."
  },
  "CM1417X" : {
    "moduleCode" : "CM1417X",
    "title" : "Fundamentals of Chemistry",
    "moduleCredit" : "4",
    "semesters" : [ 2, 3 ],
    "description" : "The objective of this module is to provide an introduction to the fundamental topics and concepts in chemistry. This includes topics such as structure of matter, periodic table and periodicity, chemical bonding, states of matter, stoichiometry, reaction types, kinetics, equilibrium and introduction to organic chemistry.",
    "preclusion" : "Students with ‘A’ level or H2 Chemistry or equivalent.\nor CM1417",
    "prerequisite" : "’O’ level pass in chemistry or equivalent"
  },
  "CS5242" : {
    "moduleCode" : "CS5242",
    "title" : "Neural Networks and Deep Learning",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module provides students with the knowledge of deep neural network and enables them to apply deep learning methods effectively on real world problems.  The module emphasizes on the understanding of the principles of neural networks and deep learning; practical guidelines and techniques for deep learning; and their applications.  Through assignments and projects, students will design, develop, and evaluate deep learning-based solutions to practical problems, such as those in the areas of computer vision, bioinformatics, fintech, cybersecurity, and games.",
    "preclusion" : null,
    "prerequisite" : "CS3244 Machine Learning"
  },
  "CS6210" : {
    "moduleCode" : "CS6210",
    "title" : "The Art of Computer Science Research",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module aims to provide the meta-skills for research in computer science. How does one discover great research problems? What are the good strategies for solving research problems? How does one write papers or give presentations with great impact? Students will seek answers to these questions by critically examining and assessing successful and less successful examples of\nresearch.",
    "preclusion" : null,
    "prerequisite" : "CS3230 Design and Analysis of Algorithms"
  },
  "CS5240" : {
    "moduleCode" : "CS5240",
    "title" : "Theoretical Foundations in MultiMedia",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "The module lays the theoretical foundation for graduate students to do research in multimedia: images, videos, audio, speech, graphics and text documents. The module covers the main theoretical issues common to various multimedia research.  These issues provide a general framework within which specific techniques in particular research areas can be understood. Topics include: vector and signal representations of multimedia, spatial and frequency analyses, models and parameter estimation methods. Examples will be drawn from different types of media.  Upon completion, students will be well-grounded to pursue further research in computer vision, graphics, natural language processing, audio analysis and multimedia applications.",
    "preclusion" : null,
    "prerequisite" : "((CS1020 or its equivalent) or CS2020 or (CS2040 or its equivalent)) and (MA1101R or MA1311 or MA1508E or MA1513) and \n(MA1102R or MA1505 or MA1507 or (MA1511 and MA1512) or MA1521) and \n(EE2012/A or MA2216 or ST1131/A or ST1232 or ST2131 or ST2334)"
  },
  "CS1010E" : {
    "moduleCode" : "CS1010E",
    "title" : "Programming Methodology",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces the fundamental concepts of problem solving by computing and programming using an imperative programming language. It is the first and foremost introductory course to computing.  Topics covered include computational thinking and computational problem solving, designing and specifying an algorithm, basic problem formulation and problem solving approaches, program development, coding, testing and debugging, fundamental programming constructs (variables, types, expressions, assignments, functions, control structures, etc.), fundamental data structures (arrays, strings, composite data types), basic sorting, and recursion.",
    "preclusion" : "CS1010, CS1010J, CS1010S, CS1010X, CS1010XCP, CS1101S",
    "prerequisite" : null
  },
  "CS3219" : {
    "moduleCode" : "CS3219",
    "title" : "Software Engineering Principles and Patterns",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module provides an in-depth, hands-on experience in key aspects of software engineering that accompany the development of software. Based on proven principles and best practices, this module focuses on software architectural design from the perspective of the software process. It covers techniques for requirement elicitation and specification that provide sound base for architectural design. The module covers design decision exploration as well as patterns that explicate principles and best practices in replicable form.",
    "preclusion" : "CS3213 Software Systems Design",
    "prerequisite" : "CS2103 or its equivalent"
  },
  "MA1101R" : {
    "moduleCode" : "MA1101R",
    "title" : "Linear Algebra I",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module is a first course in linear algebra.  Fundamental concepts of linear algebra will be introduced and investigated in the context of the Euclidean spaces R^n.  Proofs of results will be presented in the concrete setting.  Students are expected to acquire computational facilities and geometric intuition with regard to vectors and matrices.  Some applications will be presented. Major topics: Systems of linear equations, matrices, determinants, Euclidean spaces, linear combinations and linear span, subspaces, linear independence, bases and dimension, rank of a matrix, inner products, eigenvalues and eigenvectors, diagonalization, linear transformations between Euclidean spaces, applications.",
    "preclusion" : "EG1401, EG1402, MA1101, MA1311, MA1506, MA1508, FOE students, YSC2232",
    "prerequisite" : "GCE ‘A’ Level or H2 Mathematics or H2 Further Mathematics  or MA1301 or MA1301FC or MA1301X"
  },
  "CS3216" : {
    "moduleCode" : "CS3216",
    "title" : "Software Product Engineering for Digital Markets",
    "moduleCredit" : "5",
    "semesters" : [ 1 ],
    "description" : "In this module, students will practice software product engineering by working in small teams to develop well-tested, user-friendly, production-quality software for the real world. To support this goal, students work closely with users to understand their problems, gather their requirements, and obtain their feedback through a rapid, iterative, application design and development process. Students will also be exposed to practical issues for digital markets such as growing the user base of their application, deployment of the application on the Web or in the cloud system, and validating the UI design and UX of the application.",
    "preclusion" : null,
    "prerequisite" : "CS2103 or its equivalent or with special approval from instructor. Students will submit personal statements to apply for a place in the course instead of bidding through the CORS system."
  },
  "CS3217" : {
    "moduleCode" : "CS3217",
    "title" : "Software Engineering on Modern Application Platforms",
    "moduleCredit" : "5",
    "semesters" : [ 2 ],
    "description" : "This module introduces students to the practice of software engineering on modern application platforms such as mobile devices, the Web and cloud systems. Students will work in small project teams to develop well-tested,\nproduction-quality software. This module focuses on building core software engineering skills and competencies in programming modern application platforms. It also trains students to work well in project teams. Students will be\nassessed on both their individual programming competencies and their software enginnering skills in final team project.",
    "preclusion" : null,
    "prerequisite" : "CS2103 or its equivalent or with special approval from instructor. Students will submit personal statements to apply for a place in the course instead of bidding through the CORS system."
  },
  "CS6208" : {
    "moduleCode" : "CS6208",
    "title" : "Advanced Topics in Artificial Intelligence",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module covers advanced topics in artificial intelligence that are of current research or application interests. A wide range of topics may be covered including soft computing (fuzzy logic, genetic algorithms, etc.), data mining, machine learning, image and video processing, artificial life, robotics, etc. The exact topics to be taught will depend on the lecturers teaching the module.",
    "preclusion" : null,
    "prerequisite" : "CS3243"
  },
  "ES2660" : {
    "moduleCode" : "ES2660",
    "title" : "Communicating in the Information Age",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "In a context of prolific production and convenient access to content and innovation in the Information Age, how should one critically process and clearly communicate ideas to various audiences? In this module, students will learn to question and articulate their analysis of assumptions and assertions on issues facing the Information Age through processes such as identifying bias and substantiating arguments. The Ennis’ (1986, 2001) taxonomy of critical thinking dispositions will be employed to develop students’ analytical thinking skills and their ability to articulate cogent responses to arguments or to defend their own positions in both written and oral form.",
    "preclusion" : "GET1006 and GEK1901",
    "prerequisite" : "1. Students who are required to take ES1000 Foundation Academic English and/or ES1103 English for Academic Purposes, must pass those modules before they are allowed to read this module.\n2. Only SoC students matriculated in AY2016/2017 and after, are allowed to take ES2660."
  },
  "CS5239" : {
    "moduleCode" : "CS5239",
    "title" : "Computer System Performance Analysis",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "The objective of this module is to provide students a working knowledge of computer performance evaluation and capacity planning. They will be able to identify performance bottlenecks, to predict when performance limits of a system will be exceeded, and to characterise present and future workload to perform capacity planning activities. Topics include: performance analysis overview; measurement techniques and  tools including workload characterisation, instrumentation, benchmarking, analytical modelling techniques including operational analysis, stochastic queuing network analysis; performance of client-server architectures; capacity planning; case studies.",
    "preclusion" : null,
    "prerequisite" : "((CS1020 or its equivalent) or CS2020 or (CS2030 or its equivalent) or CS2113/T) and (EE2012/A or ST2132 or ST2334 or ((MA2216 or ST2131) and (ST1131/A or ST1232 or DSC2008)))"
  },
  "CS6207" : {
    "moduleCode" : "CS6207",
    "title" : "Advanced Natural Language Processing",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "The module aims to prepare students to embark on research in natural language processing (NLP). At the end of the course, the students will have experience in reading and critiquing research papers, and will have undertaken a substantial project on some aspects of NLP research. Topics covered include: Statistical parsing, Word sense disambiguation, SENSEVAL, co-reference resolution, machine translation, question answering.",
    "preclusion" : null,
    "prerequisite" : "CS4248"
  },
  "CS4268" : {
    "moduleCode" : "CS4268",
    "title" : "Quantum Computing",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module will introduce basics of quantum computing and cover various well known algorithms e.g. Deutsch-Jozsa algorithm, Simon’s algorithms, quantum Fourier transform, phase estimation, order finding, Shor’s algorithm and Grover’s algorithm. The module will also cover some basics in quantum information theory, cryptography and error correction.",
    "preclusion" : null,
    "prerequisite" : "CS3230 and \n(MA1101R or MA1311 or MA1508E or MA1513) and \n(EE2012/A or MA2216 or ST2131 or ST2334)"
  },
  "CS5236" : {
    "moduleCode" : "CS5236",
    "title" : "Advanced Automata Theory",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "In computer science, automata are an important tool for many theoretical investigations. Various types of automata have been used to characterise complexity classes. This module covers automata theory in depth, describes the\nChomsky hierarchy, and introduces various advanced topics including automata structures, automata on infinite words, automata on trees and the learnability of classes of regular languages from queries and positive data.",
    "preclusion" : null,
    "prerequisite" : "CS4232 Theory of Computation"
  },
  "CS5478" : {
    "moduleCode" : "CS5478",
    "title" : "Intelligent Robots: Algorithms and Systems",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module introduces the core algorithms and system architectures of intelligent robots. It examines the main system components for sensing, decision making, and motion control and importantly, their integration for core robot capabilities, such as navigation and manipulation. It covers the key algorithms for robot intelligence through inference, planning, and learning, and also provides some practical experiences with modern robot systems. A variety of Illustrative examples are given, e.g., self-driving cars, aerial drones, and object manipulation.",
    "preclusion" : "CS4278",
    "prerequisite" : "CS3243 and (MA1101R or MA1311 or MA1508E) and (MA1102R or MA1505 or (MA1511 and MA1512) or MA1521) and (EE2012/A or ST2131 or ST2334)"
  },
  "CS3210" : {
    "moduleCode" : "CS3210",
    "title" : "Parallel Computing",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "The aim of this module is to provide an introduction to the field of parallel computing with hands-on parallel programming experience on real parallel machines. The module is divided into four parts: parallel computation models and parallelism, parallel architectures, parallel algorithm design and programming, and new parallel computing models. Topics includes: theory of parallelism and models; shared-memory architectures; distributed-memory architectures; data parallel architectures; interconnection networks, topologies and basic of communication operations; principles of parallel algorithm design; performance\nand scalability of parallel programs, overview of new parallel computing models such as grid, cloud, GPGPU.",
    "preclusion" : null,
    "prerequisite" : "CS2100 or CG2007 or CG2028 or EE2024 or EE2028"
  },
  "CS5477" : {
    "moduleCode" : "CS5477",
    "title" : "3D Computer Vision",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "One of the most important capability for robots such as\nself-driving cars, domestic mobile robots, and drones to\nachieve full autonomy is the ability to perceive the 3D\nenvironment. A camera is an excellent choice as the main\nsensory device for robotic perception because it produces\ninformation-rich images, and is lightweight, low cost and\nrequires little or no maintenance. This module covers the\nmathematical concepts and algorithms that allow us to\nrecover the 3D geometry of the camera motions and the\nstructures in its environment. Topics include projective\ngeometry, camera model, one-/two-/three-/N-View\nreconstructions and stereo, generalized cameras and nonrigid structure-from-motion.",
    "preclusion" : "CS4277",
    "prerequisite" : "(MA1101R or MA1311 or MA1506 or MA1508E) and\n(CS2040 or its equivalent)"
  },
  "CS6203" : {
    "moduleCode" : "CS6203",
    "title" : "Advanced Topics in Database Systems",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module covers the topics in data base management systems with current research and industrial interests and importance. Examples of topics include multimedia data management, object-oriented database technology, data warehousing and data mining, integration of heterogeneous and legacy systems.",
    "preclusion" : null,
    "prerequisite" : "CS3223"
  },
  "CS3211" : {
    "moduleCode" : "CS3211",
    "title" : "Parallel and Concurrent Programming",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "A concurrent system consists of a set of processes that executes simultaneously and that may collaborate by communicating and synchronising with one another. Examples of concurrent systems are parallel programs that describe sets of collaborating processes. This module introduces the design, development and debugging of parallel programs. It will build on the concurrency concepts gained from the Operating Systems module. It covers concepts and modelling tools for specifying and reasoning (about the properties of) concurrent systems and parallel programs. It also covers principles of performance analysis, asynchronous and asynchronous parallel programming, and engineering concurrent systems and parallel programs.",
    "preclusion" : null,
    "prerequisite" : "CS2106 or CG2271"
  },
  "CS5234" : {
    "moduleCode" : "CS5234",
    "title" : "Algorithms at Scale",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This course presents advanced techniques for the design and analysis of algorithms and data structures, with emphasis on efficiency and scalability. It will cover a variety of algorithmic topics that arise when coping with very large data sets. How do you design algorithms that scale well? How do you process streaming data? How do you construct algorithms that run efficiently on modern hardware? The goal of this module is to cover modern tools and techniques in algorithm design.",
    "preclusion" : null,
    "prerequisite" : "CS3230"
  },
  "CS5476" : {
    "moduleCode" : "CS5476",
    "title" : "IoT Security",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "With the advent of the Internet-of-Things, the computing\nparadigm is quickly changing from the traditional cyber\ndomain to cyber-physical domain. This is made possible\nfrom devices that are equipped with sensors and actuators\nthat interact with the physical world. In this module, we will\ninvestigate how such sensing systems affect the notion of\ncomputer security. We will also explore the state-of-the-art\nresearch in the areas of sensing systems and how they\ncan provide benefits to the security of the Internet-ofThings. Furthermore, this module will also investigate how\nan attacker may compromise the sensing information to\nexploit security vulnerabilities in these systems.",
    "preclusion" : "CS4276",
    "prerequisite" : "CG3002 or CG4002 or CS3237"
  },
  "CS5233" : {
    "moduleCode" : "CS5233",
    "title" : "Simulation and Modelling Techniques",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module aims to provide students with a working knowledge of applying\nsimulation techniques to model, simulate and study complex systems. It covers techniques in simulation model design, model execution, and model analysis. Students will have hands-on experience using a simulation package. The module will also introduce concepts of parallel and distributed simulation, and high level architecture.",
    "preclusion" : null,
    "prerequisite" : "CS4231 and \n(EE2012/A or ST2132 or ST2334 or ((MA2216 or ST2131) and (ST1131/A or ST1232 or DSC2008)))"
  },
  "CS5232" : {
    "moduleCode" : "CS5232",
    "title" : "Formal Specification and Design Techniques",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "The primary role of the formal specification is to provide a precise and unambiguous description of a computer system. A formal specification allows the system designer to verify important properties and detect design error before system development begins. The objective of this course is to study various formal specification and design techniques for modelling (1) object-oriented systems, (2) real-time distributed systems, and (3) concurrent reactive systems. The course will focus on the state-based notations Z/Object-Z, event-based notation CSP/Timed-CSP. Graphical modelling notations, such as StateChart and UML (Unified Modelling Language) will also be addressed.",
    "preclusion" : null,
    "prerequisite" : "(MA1100 or (CS1231 or its equivalent)) and CS2103"
  },
  "CS5231" : {
    "moduleCode" : "CS5231",
    "title" : "Systems Security",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module introduces fundamental notions and requirements in computer system security and the mechanisms that provide security in various systems and applications. It aims to teach students the security perspective of popular computer systems, such as desktop systems, mobile systems, and web-based systems. Its topics include software security, operating system security, mobile security, web security, trusted platforms, and auditing and forensic analysis.",
    "preclusion" : null,
    "prerequisite" : "CS3235 Computer Security"
  },
  "CS6285" : {
    "moduleCode" : "CS6285",
    "title" : "Topics in Computer Science: Bridging System and Deep Learning",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "Co-design of system and machine learning algorithms has led to faster and more scalable machine learning systems.  The module aims to expose students to recent state-of-the-art co-design techniques to make deep learning run faster, touching on both system research and AI research. The specific topics include distributed deep learning, large-batch training, second-order optimization, asynchronous algorithms, neural network compression, federated machine learning, memory-efficient optimizers, model parallelism, efficient communication library, low-precision training.",
    "preclusion" : "Variable, depend on the choice of topics or departmental approval.",
    "prerequisite" : "CS5242 and CS3210"
  },
  "CS2113T" : {
    "moduleCode" : "CS2113T",
    "title" : "Software Engineering & Object-Oriented Programming",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces the necessary skills for systematic and rigorous development of software systems. It covers requirements, design, implementation, quality assurance, and project management aspects of small-to-medium size multi-person software projects. The module uses the Object Oriented Programming paradigm. Students of this module will receive hands-on practice of tools commonly used in the industry, such as test automation tools, build automation tools, and code revisioning tools will be covered.",
    "preclusion" : "CS2103, CS2103T, (CS2113T for CS2113), (CS2113 for CS2113T)",
    "prerequisite" : "CS2040C or ((CS2030 or its equivalent) and CS2040/S)"
  },
  "CS6283" : {
    "moduleCode" : "CS6283",
    "title" : "Topics in Computer Science: Trustworthy Machine Learning",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "Machine learning is increasingly being used in critical decision-making systems, yet is not reliable in the presence of noisy, biased, and adversarial data. Can we trust machine learning models?  This module aims to answer this question, by covering the fundamental aspects of reasoning about trust in machine learning, including its robustness to adversarial data and model manipulations, the privacy risks of machine learning algorithms for sensitive data, the transparency measures for machine learning, and fairness in AI. It covers the algorithms that analyze machine learning vulnerabilities; and techniques for building reliable and trustworthy machine learning algorithms.",
    "preclusion" : "Variable, depend on the choice of topics or departmental approval.",
    "prerequisite" : "CS3244 Machine Learning"
  },
  "PC1221" : {
    "moduleCode" : "PC1221",
    "title" : "Fundamentals of Physics I",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module aims to bridge the gap between O level physics and 1st year university physics level. The module covers the fundamentals of two branches of physics: mechanics and thermodynamics. Topics included in the part on mechanics are linear motion, curvilinear motion, relative motion, circular motion, Newtons laws of motion, work and energy, conservation of energy, linear momentum and conservation, rotational kinematics, torque and moment of inertia, rotational dynamics, conservation of angular momentum, gravitation and planetary motion, static equilibrium, oscillatory motion and fluid mechanics. The part on thermodynamics encompasses topics such as temperature and zeroth law of thermodynamics, temperature scales, thermal expansion, heat and internal energy, thermal processes, first law of thermodynamics, ideal gas laws and kinetic theory of gasses.  .",
    "preclusion" : "A' LEVEL OR H2 PASS IN PHYSICS OR PC1141, OR PC1142 OR PC1431 OR PC1431FC or PC1431X OR PC1221FC or PC1221X, YSC1213",
    "prerequisite" : "'O' level pass in Physics or Combined Science (Physics & Chemistry OR Physics & Biology)."
  },
  "CS6280" : {
    "moduleCode" : "CS6280",
    "title" : "Topics in Computer Science: Systems Design for Next Gen Hardware",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "With the end of Moore's Law, we are witnessing a paradigm shift in computing platforms towards the inclusion of specialized hardware accelerators. In this module, we will explore the designs of system software on these emerging computing hardware platforms. We will first take a broad overview of existing and upcoming specialized hardware devices, including GPU, TPU, FPGA, SmartNICs, reconfigurable network switches, and other specialized ASICs. We will then discuss various topics in systems design for these new hardware platforms, e.g., OS constructs, abstractions, programming models, resource sharing and multiplexing, scheduling, co-designing with applications and algorithms, and joint processing with CPU.",
    "preclusion" : null,
    "prerequisite" : "CS2100 Computer Organization and CS2106 Introduction to Operating Systems"
  },
  "CP3880" : {
    "moduleCode" : "CP3880",
    "title" : "Advanced Technology Attachment Programme",
    "moduleCredit" : "12",
    "semesters" : [ 1, 2 ],
    "description" : "",
    "preclusion" : "EG3601",
    "prerequisite" : "(IS2101 Business and Technical Communication or CS2101 Effective Communication for Computing Professionals or their equivalents)\nand\n(CS2103/CS2103T Software Engineering or IS2103 Enterprise Systems Development Concepts or IS2150 E-Business Design and Implementation or BT2101 IT and Decision Making)"
  },
  "CSA6102" : {
    "moduleCode" : "CSA6102",
    "title" : "Cultural Studies in Asia",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This module will examine the various areas of research in Cultural Studies conducted by Asian scholars or scholars locating their research in Asia. It will examine the histories, concepts and analytic strategies that these scholars deploy in the analysis of the changing cultural landscapes and practices in contemporary Asia. Abiding themes of the module will be the conceptual constitution of the idea of 'Asia', the emergence of 'trans-Asian' practices and the possibility of 'pan-Asian' identities that these trans-location practices might engender.",
    "preclusion" : null,
    "prerequisite" : null
  },
  "PC1222" : {
    "moduleCode" : "PC1222",
    "title" : "Fundamentals of Physics II",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "The module aims to bridge the gap between O level Physics and first year university physics level. The module covers the fundamentals of three branches of physics: electricity &amp; magnetism, optics and modern physics. Topics included in the part on electricity &amp; magnetism are Coulombs law, electric field and potential, capacitance, current and resistance, DC circuits, magnetic fields, magnetic effects on current, electromagnetic induction, AC circuits and electromagnetic waves. The part on optics encompasses topics such as reflection and refraction, systems of lenses, optical instruments, interference, diffraction, grating and polarization. Topics covered in the part on modern physics are blackbody radiation, photoelectric effect, atomic transitions and spectra, the uncertainty principle, wave-particle duality, radioactivity and decay processes, binding energy and fusion energy and fusion &amp; fission.",
    "preclusion" : "'A' Level OR H2 Pass in Physics or PC1143, or PC1144 or PC1432/PC1432X, YSC1213",
    "prerequisite" : "'O' level pass in Physics or Combined Science (Physics & Chemistry OR Physics & Biology)."
  },
  "CP4106" : {
    "moduleCode" : "CP4106",
    "title" : "Computing Project",
    "moduleCredit" : "8",
    "semesters" : [ 1, 2 ],
    "description" : "The objective of this project module enables students to undertake a substantial computing-related project work over a period of one year. Students work individually on self-proposed projects or projects proposed by staff. They will have good opportunity to apply what they have learnt on practical problems, be it research-oriented or software development-oriented. Students should periodically submit a report make a presentation to the respective supervisors.\nThe project will be letter-graded.",
    "preclusion" : "CG4001, BT4101, CP4101, or any Integrated Honours Thesis/Project/Dissertation module",
    "prerequisite" : "Completed at least 112 MCs for the respective degree."
  },
  "MA1521" : {
    "moduleCode" : "MA1521",
    "title" : "Calculus for Computing",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module provides a basic foundation for calculus and its related subjects required by computing students. The objective is to train the students to be able to handle calculus techniques arising in their courses of specialization. In addition to the standard calculus material, the course also covers simple mathematical modeling techniques and numerical methods in connection with ordinary differential equations. \n\n\n\nMajor topics: \n\nPreliminaries on sets and number systems. \n\nCalculus of functions of one variable and applications. \n\nSequences, series and power series.   \n\nFunctions of several variables. Extrema.\n\nFirst and second order differential equations. \n\nBasic numerical methods for ordinary differential equations.",
    "preclusion" : "Students reading a primary major in Mathematics/Applied Mathematics/Quantitative Finance/Data Science and Analytics, MA1102R, MA1312, MA1505, MA1507, MA2501, FoE students, YSC1216",
    "prerequisite" : "GCE ‘A’ Level Mathematics or H2 Mathematics or H2 Further Mathematics or MA1301 or MA1301X"
  },
  "CS3236R" : {
    "moduleCode" : "CS3236R",
    "title" : "Introduction to Information Theory",
    "moduleCredit" : "1",
    "semesters" : [ 1 ],
    "description" : "This 1-MC module adds a research component to the host module, enabling students to acquire more in-depth understanding of the research issues pertaining to the subject matter.",
    "preclusion" : "same as CS3236",
    "prerequisite" : "Co-read with host module in current semester or pass host module in previous semester. Student selection process is enforced."
  },
  "CS5229" : {
    "moduleCode" : "CS5229",
    "title" : "Advanced Computer Networks",
    "moduleCredit" : "4",
    "semesters" : [ 1 ],
    "description" : "This course covers advanced fundamental principles of computer networks and techniques for networking. The goal of this course is to teach these fundamentals/techniques that will remain important and relevant regardless of the hot topics in networks and networking. Briefly, the topics include advanced network architecture and design principles, protocol mechanisms, implementation principles and software engineering practices, network algorithmic, network simulation techniques and tools, performance analysis and measurement, and protocol specification/verification techniques.",
    "preclusion" : null,
    "prerequisite" : "CS4226 Internet Architecture or EE4210 Computer Communications Networks II"
  },
  "CS2113" : {
    "moduleCode" : "CS2113",
    "title" : "Software Engineering & Object-Oriented Programming",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This module introduces the necessary skills for systematic and rigorous development of software systems. It covers requirements, design, implementation, quality assurance, and project management aspects of small-to-medium size multi-person software projects. The module uses the Object Oriented Programming paradigm. Students of this module will receive hands-on practice of tools commonly used in the industry, such as test automation tools, build automation tools, and code revisioning tools will be covered.",
    "preclusion" : "CS2103, CS2103T, (CS2113T for CS2113), (CS2113 for CS2113T)",
    "prerequisite" : "CS2040C or ((CS2030 or its equivalent) and CS2040/S)"
  },
  "CS3203" : {
    "moduleCode" : "CS3203",
    "title" : "Software Engineering Project",
    "moduleCredit" : "8",
    "semesters" : [ 1, 2 ],
    "description" : "This module provides students with hands-on experience in\nworking in project groups through a complete SDLC to\ndevelop a well-designed, well-tested, large-scaled software\nsystem. The students will apply the current best software\nengineering practices on the analysis, design,\nimplementation, and testing of software system. Through\nthe project, students will practise analysis of user’s needs,\nformulation of computing requirements to meet the user’s\nneeds, modelling and design of the computer systems\naccording to the requirements, evaluation of the design,\nefficient implementation of software components, system\nintegration, software version control, and rigorous testing.",
    "preclusion" : "CS3201, CS3202",
    "prerequisite" : "(CS2103/T or CS2113/T)"
  },
  "CS5228" : {
    "moduleCode" : "CS5228",
    "title" : "Knowledge Discovery and Data Mining",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "This course introduces fundamental principles behind data mining and efficient techniques for mining large databases. It provides an overview of the algorithmic aspect of data mining: its efficiency (high-dimensional database indexing, OLAP, data reduction, compression techniques) and effectiveness (machine learning involving greedy search, branch and bound, stochastic search, parameter optimisation). Efficient techniques covered include association rules mining (Apriori algorithm, correlation search, constrained association rule discovery), classifier induction (decision trees, RainForest, SLIQ; Support vector machine; Naive Bayesian; classification based on association / visualisation), cluster analysis (k-means, k-mediods, DBSCAN, OPTICS, DENCLUE, STING, CLUSEQ, ROCK etc), and outliers/deviants detection (LOF, Distance-based outlier etc).",
    "preclusion" : null,
    "prerequisite" : "CS2102 and CS3243 and \n(EE2012/A or ST2132 or ST2334 or ((MA2216 or ST2131) and (ST1131/A or ST1232 or DSC2008)))"
  },
  "CS5346" : {
    "moduleCode" : "CS5346",
    "title" : "Information Visualisation",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module aims to bring together individual pedagogies\nof design, information, and computation, for teaching the\nanalysis and representation of data for visualisation.\nStudents will learn the methodology of developing and\nevaluating an information visualisation solution, common\ninformation visualisation techniques (such as those for\ntopical, spatial, hierarchical, temporal, and relational data),\nand methods for scaling up interactive visualisation with big\ndata. After the module, students should be able to use the\nexisting visualisation tools for building useful, interactive,\ninformation visualisation to facilitate complex data\nanalytics, exploration, understanding, and pattern\ndiscovery.",
    "preclusion" : null,
    "prerequisite" : "(CS2040 or its equivalent) and CS2102 and CS3240 and \n(EE2012/A or ST1131/A or ST1232 or DSC2008 or ST2132 or ST2334)"
  },
  "CS5224" : {
    "moduleCode" : "CS5224",
    "title" : "Cloud Computing",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module aims to provide an overview of the design, management and application of cloud computing. The topics include managing virtualization, cloud computing environments, cloud design patterns and use cases, data centre architectures and technologies, cloud services fulfillment and assurance, orchestration and automation of cloud resources, cloud capacity management, cloud economics, case studies.",
    "preclusion" : null,
    "prerequisite" : null
  },
  "CS5223" : {
    "moduleCode" : "CS5223",
    "title" : "Distributed Systems",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "The topic of Distributed Systems is now garnering increasing importance, especially with the advancement in technology of the Internet and WWW. The aim of this module is to provide students with basic concepts and principles of distributed operating systems, interprocess communications, distributed file systems, shared data, and the middleware approach. The module is taught in seminar style, and several case studies are included, e.g. CORBA.   Topics: Introduction - Characteristics of Distributed Systems; Process Management Communication in Distributed Systems; Distributed Synchronisation; Distributed Real-time Systems; File Systems; Naming Security; Fault Tolerant Distributed Systems; Distributed Simulation; WWW as an application of Distributed System.",
    "preclusion" : null,
    "prerequisite" : "CS3211 Parallel and Concurrent Programming"
  },
  "CS5344" : {
    "moduleCode" : "CS5344",
    "title" : "Big-Data Analytics Technology",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module analysis of data which can not fit in main memory and application of such analysis to web applications. The topics covered include: map-reduce as a tool for creating parallel algorithms that operate on very large amount of data, similarity search, data-streaming processing, search engine techonology, clustering of very large, high-dimensional datasets.",
    "preclusion" : null,
    "prerequisite" : "BT5110 (Data Management and Warehousing) or database related modules; programming experience (with data structures and algorithms) is required"
  },
  "CS5222" : {
    "moduleCode" : "CS5222",
    "title" : "Advanced Computer Architecture",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "The aim of this module is to introduce the state-of-the-art architectural advances underlying the current generation of computing systems. A review of pipelined processor design and hierarchical memory design is followed by advanced topics including exploitation of instruction-level parallelism through dynamic instruction scheduling and speculation, exploiting thread-level parallelism through\nmultiprocessors, and optimizations for memory and storage subsystems. Throughout the module, particular emphasis will be placed on cost-performance-power-reliability trade-offs in designing the different architectural components.",
    "preclusion" : null,
    "prerequisite" : "CS3220 Computer Architecture or CS4223 Multi-core Architecture"
  },
  "CS5340" : {
    "moduleCode" : "CS5340",
    "title" : "Uncertainty Modelling in AI",
    "moduleCredit" : "4",
    "semesters" : [ 1, 2 ],
    "description" : "The module covers modelling methods that are suitable for reasoning with uncertainty. The main focus will be on probabilistic models including Bayesian networks and Markov networks. Topics include representing conditional independence, building graphical models, inference using graphical models and learning from data. Selected applications in various domains such as speech, vision, natural language processing, medical informatics, bioinformatics, data mining and others will be discussed.",
    "preclusion" : null,
    "prerequisite" : "CS3243 and \n(EE2012/A or ST2132 or ST2334 or ((MA2216 or ST2131) and (ST1131/A or ST1232 or DSC2008)))"
  },
  "CS3281" : {
    "moduleCode" : "CS3281",
    "title" : "Thematic Systems Project I",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module is the first part of a two-part series on the development of large-scaled computer systems to solve real-world problems under specific themes such as healthcare, security and surveillance, tourism, etc. Students with complementary technical expertise will form project teams to work on real-world projects under the supervision of CS professors and industrial partners. This\nfirst part focuses on the analysis of the real-world problems, formulation of the computing requirements of the desired solution that meets the user’s needs, design of the computer systems according to the requirements, and evaluation of the design.",
    "preclusion" : null,
    "prerequisite" : "(CS2103 or its equivalent) and have passed at least one primary module in a CS focus area. Student selection process will be enforced."
  },
  "CS3282" : {
    "moduleCode" : "CS3282",
    "title" : "Thematic Systems Project II",
    "moduleCredit" : "4",
    "semesters" : [ 2 ],
    "description" : "This module is the second part of a two-part series on the development of large-scaled computer systems to solve real-world problems under specific themes such as healthcare, security and surveillance, tourism, etc. Students with complementary technical expertise will form project teams to work on real-world projects under the supervision of CS professors and industrial partners. This\nsecond part focuses on the development of algorithms required for the systems, implementation and testing of the algorithms and the systems, and evaluation of the systems according to the users’ requirements.",
    "preclusion" : null,
    "prerequisite" : "CS3281 and have passed at least two primary modules in a CS focus area. Student selection process will be enforced."
  },
  "CP2201" : {
    "moduleCode" : "CP2201",
    "title" : "Journey of the Innovator",
    "moduleCredit" : "2",
    "semesters" : [ 2 ],
    "description" : "Innovators practice the art of persuading people to accept changes in how they live—in work, leisure and social interaction. This module’s object is to introduce students to digital innovation, and to encourage them to embark on a personal journey of creativity and challenge. Inspirational innovators will be invited to present topics related to digital innovation, such as successful innovative projects of start-up teams and advanced development teams, innovative approaches such as Design Thinking, and opportunities for innovation, the vibrant intersection of energising technology trends and new markets. This module will be graded as “Completed Satisfactory” or “Completed Unsatisfactory”\n(CS/CU).",
    "preclusion" : null,
    "prerequisite" : null
  },
  "IS4010" : {
    "moduleCode" : "IS4010",
    "title" : "Industry Internship Programme",
    "moduleCredit" : "12",
    "semesters" : [ 1, 2 ],
    "description" : "This module enables students to apply the computing knowledge and skills that they have acquired in class to industry internships in companies/organizations. Students in industry internships will be jointly guided by supervisors from both the companies/organizations and the school Their progress on internship projects will be monitored during internship period, and their performance will be assessed through letter grades at the end of the internship. The internship duration will be 6 months, consisting of both a full-time and part-time component. Full-time internship attachment will last for 3 months during the NUS vacation period, and will continue on a part-time basis that will last for 3 months during the NUS study semester.",
    "preclusion" : null,
    "prerequisite" : "[IS2101 or CS2101] and [IS1105 or IS3101 or IS3103] and [IS2103 or CS2107 or  (BT2101 and BT2102)]"
  },
  "CP4101" : {
    "moduleCode" : "CP4101",
    "title" : "B.Comp. Dissertation",
    "moduleCredit" : "12",
    "semesters" : [ 1, 2 ],
    "description" : "",
    "preclusion" : "CS4101",
    "prerequisite" : "Attain at least 70% of the MC requirement for the respective degree"
  }
}
