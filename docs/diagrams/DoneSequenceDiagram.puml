@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":NuudleParser" as NuudleParser LOGIC_COLOR
participant ":DoneCommandParser" as DoneCommandParser LOGIC_COLOR
participant "d:DoneCommand" as DoneCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "toMark:Appointment" as ToMarkAppointment MODEL_COLOR
end box
[-> LogicManager : execute("done 1")
activate LogicManager

LogicManager -> NuudleParser : parse("done 1")
activate NuudleParser

create DoneCommandParser
NuudleParser -> DoneCommandParser : new
activate DoneCommandParser

DoneCommandParser --> NuudleParser
deactivate DoneCommandParser

NuudleParser -> DoneCommandParser : parse()
activate DoneCommandParser

create DoneCommand
DoneCommandParser -> DoneCommand : new
activate DoneCommand

DoneCommand --> DoneCommandParser : cmd
deactivate DoneCommand

DoneCommandParser --> NuudleParser : cmd
deactivate DoneCommandParser

NuudleParser --> LogicManager : cmd
deactivate NuudleParser

LogicManager -> DoneCommand : execute()
activate DoneCommand

DoneCommand -> Model : getFilteredAppointmentList()
activate Model

Model --> DoneCommand : lastShownAppointmentList
deactivate Model

DoneCommand -> ToMarkAppointment : toMark.markAsDone()
activate ToMarkAppointment



ToMarkAppointment --> DoneCommand : doneAppt
deactivate ToMarkAppointment

DoneCommand -> Model : setAppointment(toMark, doneAppt)
activate Model

Model --> DoneCommand
deactivate Model

DoneCommand --> LogicManager : result
deactivate DoneCommand
DoneCommand -[hidden]-> LogicManager : result
destroy DoneCommand

[<--LogicManager
deactivate LogicManager
@enduml
