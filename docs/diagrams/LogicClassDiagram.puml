@startuml
!include style.puml
skinparam Class {
    BorderColor BACKGROUND_COLOR
    FontColor BACKGROUND_COLOR
    BackgroundColor LOGIC_COLOR_T3
    StereotypeFontColor BACKGROUND_COLOR
}
skinparam ArrowColor LOGIC_COLOR_T3

hide method
hide attribute

package Logic {

package Parser {
Interface Parser <<Interface>>
Class AppointmentBookParser
Class XYZCommandParser
Class CliSyntax
Class ParserUtil
Class ArgumentMultimap
Class ArgumentTokenizer
Class Prefix
}

package Command {
Class XYZCommand
Class CommandResult
Class "{abstract}\nCommand" as Command
}

Interface Logic <<Interface>>
Class LogicManager
}

package Model{
Class HiddenModel #FFFFFF
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .up.|> Logic
LogicManager -->"1" AppointmentBookParser
AppointmentBookParser ..> XYZCommandParser: creates >

XYZCommandParser ..> XYZCommand : creates >
XYZCommandParser ..|> Parser
XYZCommandParser ..> ArgumentMultimap
XYZCommandParser ..> ArgumentTokenizer
ArgumentTokenizer .left.> ArgumentMultimap
XYZCommandParser ..> CliSyntax
CliSyntax ..> Prefix
XYZCommandParser ..> ParserUtil
ParserUtil .down.> Prefix
ArgumentTokenizer .down.> Prefix
XYZCommand -up-|> Command
LogicManager .left.> Command : executes >

LogicManager --> Model
Command .right.> Model

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult
CommandResult -[hidden]-> Parser

note right of XYZCommand: XYZCommand = AddPatientCommand, \nEditAppointmentCommand, etc

@enduml
