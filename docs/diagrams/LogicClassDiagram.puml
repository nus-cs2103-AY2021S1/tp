@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic {

package Parser {
Class McGymmyParser
Class PrimitiveCommandParser
}

package Command as CommandPackage {
Class XYZCommand
Class CommandResult
Interface CommandExecutable <<Interface>>
Class "{abstract}\nCommand" as Command
}

package Parameter as ParameterPackage {
Class ParameterSet
Class "{abstract}\nAbstractParameter" as AbstractParameter
Class Parameter
Class OptionalParameter
}

Interface Logic <<Interface>>
Class LogicManager
}

package Model{
Class HiddenModel #FFFFFF
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .up.|> Logic
LogicManager .down.> CommandResult
LogicManager .down.> CommandExecutable : executes >
LogicManager -right-> McGymmyParser
LogicManager --> HiddenModel

McGymmyParser -down-> PrimitiveCommandParser
PrimitiveCommandParser ..> XYZCommand : creates >
PrimitiveCommandParser ...> ParameterSet : populates >

XYZCommand -up-|> Command
CommandExecutable .left.> CommandResult
CommandExecutable .left.> HiddenModel : modifies >
Command .up.|> CommandExecutable

ParameterSet .down.> AbstractParameter
Parameter -up-|> AbstractParameter
OptionalParameter -up-|> AbstractParameter

Command ....> ParameterSet : consumes from >
note right of XYZCommand: XYZCommand = AddCommand, \nFindCommand, etc

@enduml
