@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic {

package Parser {
Interface Parser <<Interface>>
Class VirusTrackerParser
Class XYZCommandParser
Class CliSyntax
Class ParserUtil
Class ArgumentMultimap
Class ArgumentTokenizer
Class Prefix
Class IndexIdPair
}

package Command {
Class XYZCommand
Class CommandResult
Class "{abstract}\nCommand" as Command
}

Interface Logic <<Interface>>
Class LogicManager
}

package Model{
Class HiddenModel #FFFFFF
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .up.|> Logic
LogicManager -->"1" VirusTrackerParser
VirusTrackerParser .left.> XYZCommandParser: creates >

XYZCommandParser ..> XYZCommand : creates >
XYZCommandParser ..|> Parser
XYZCommandParser ..> ArgumentMultimap
XYZCommandParser ..> ArgumentTokenizer
ArgumentTokenizer .right.> ArgumentMultimap
XYZCommandParser .left.> CliSyntax
CliSyntax ..> Prefix
XYZCommandParser ..> ParserUtil
ParserUtil ..> Prefix
ArgumentTokenizer ..> Prefix
XYZCommand -up-|> Command
LogicManager .left.> Command : executes >

LogicManager --> Model
Command .right.> Model
note right of XYZCommand: XYZCommand = AddPersonCommand, \nFindPersonCommand, etc

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult
CommandResult -[hidden]-> Parser

IndexIdPair .left.> ArgumentMultimap
XYZCommandParser ..> IndexIdPair : uses >
@enduml
