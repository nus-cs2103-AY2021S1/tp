@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":StockBookParser" as StockBookParser LOGIC_COLOR
participant ":AddCommandParser" as AddCommandParser LOGIC_COLOR
participant ":AddCommand" as AddCommand LOGIC_COLOR
participant ":CommandException" as CommandException LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant ":SerialNumberSetsBook" as SerialNumberSetsBook MODEL_COLOR
end box

[-> LogicManager : execute()
activate LogicManager

LogicManager -> StockBookParser : parseCommand(...)
activate StockBookParser

create AddCommandParser
StockBookParser -> AddCommandParser
activate AddCommandParser

AddCommandParser --> StockBookParser
deactivate AddCommandParser

StockBookParser -> AddCommandParser : parse(...)
activate AddCommandParser

AddCommandParser -> AddCommandParser : arePrefixesPresent(...)
activate AddCommandParser

AddCommandParser --> AddCommandParser
deactivate AddCommandParser

AddCommandParser -> AddCommandParser : doesPrefixesAppearOnce(...)
activate AddCommandParser

AddCommandParser --> AddCommandParser
deactivate AddCommandParser

AddCommandParser -> AddCommandParser : doesLowQuantityPrefixAppearOnce(...)
activate AddCommandParser

AddCommandParser --> AddCommandParser
deactivate AddCommandParser

create AddCommand
AddCommandParser -> AddCommand
activate AddCommand

AddCommand --> AddCommandParser
deactivate AddCommand

AddCommandParser --> StockBookParser
deactivate AddCommandParser

StockBookParser -> AddCommand : execute()
activate AddCommand

AddCommand -> Model : hasStock(...)
activate Model
Model --> AddCommand
deactivate Model

alt stock present in Stockbook
    create CommandException
    AddCommand -> CommandException
    activate CommandException
    CommandException --> AddCommand
    deactivate CommandException
    AddCommand --> StockBookParser : exception
else stock not present in Stockbook
    AddCommand -> Model :generateNextSerialNumber(...)
    activate Model
    Model -> SerialNumberSetsBook :generateNextSerialNumber(...)
    activate SerialNumberSetsBook
    SerialNumberSetsBook --> Model
    deactivate SerialNumberSetsBook
    Model --> AddCommand
    deactivate Model
    AddCommand -> Model :addStock(...)
    activate Model
    Model --> AddCommand
    deactivate Model
    AddCommand --> StockBookParser
    deactivate AddCommand
end

StockBookParser --> LogicManager
deactivate StockBookParser

[<--LogicManager
deactivate LogicManager
@enduml
