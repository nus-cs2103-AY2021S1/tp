@startuml
!include style.puml
skinparam ParticipantFontSize 30
skinparam ArrowFontSize 28
skinparam defaultFontSize 28

box LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ProductiveNusParser" as ProductiveNusParser LOGIC_COLOR
participant ":DoneCommandParser" as DoneCommandParser LOGIC_COLOR
participant ":DoneCommand" as DoneCommand LOGIC_COLOR
participant ":CommandLogic" as CommandLogic LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("done 1 3")
activate LogicManager

LogicManager -> ProductiveNusParser : parseCommand("done 1 3")
activate ProductiveNusParser

create DoneCommandParser
ProductiveNusParser -> DoneCommandParser
activate DoneCommandParser

DoneCommandParser --> ProductiveNusParser
deactivate DoneCommandParser

ProductiveNusParser -> DoneCommandParser : parse("1 3")
activate DoneCommandParser

create DoneCommand
DoneCommandParser -> DoneCommand : DoneCommand(parsedIndexes)
activate DoneCommand

DoneCommand --> DoneCommandParser
deactivate DoneCommand

DoneCommandParser --> ProductiveNusParser
deactivate DoneCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DoneCommandParser -[hidden]-> ProductiveNusParser
destroy DoneCommandParser

ProductiveNusParser --> LogicManager
deactivate ProductiveNusParser

LogicManager -> DoneCommand : execute()
activate DoneCommand

DoneCommand -> CommandLogic : checkForDuplicatedIndexes([1 3])
activate CommandLogic

CommandLogic --> DoneCommand
deactivate CommandLogic

DoneCommand -> CommandLogic : checkForInvalidIndexes([1 3])
activate CommandLogic

CommandLogic --> DoneCommand
deactivate CommandLogic

loop 2 times
    DoneCommand -> Model : get
    activate Model
    Model --> DoneCommand : assignmentToMarkDone
    deactivate Model

    DoneCommand -> Model : setAssignment(assignmentToMarkDone, assignmentMarkedDone)
    activate Model
    Model --> DoneCommand
    deactivate Model
end

create CommandResult
DoneCommand -> CommandResult : CommandResult(assignmentsToMarkDone)
activate CommandResult

CommandResult --> DoneCommand
deactivate CommandResult

DoneCommand --> LogicManager : result
deactivate DoneCommand

[<--LogicManager
deactivate LogicManager
@enduml
