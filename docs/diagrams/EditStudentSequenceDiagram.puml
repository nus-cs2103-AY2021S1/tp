@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TrackrParser" as TrackrParser LOGIC_COLOR
participant ":EditStudentCommandParser" as EditStudentCommandParser LOGIC_COLOR
participant "e:EditStudentCommand" as EditStudentCommand LOGIC_COLOR
participant "result:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant ":ReadOnlyTrackr<Module>" as ReadOnlyTrackr MODEL_COLOR
participant "usl:UniqueStudentList" as UniqueStudentList MODEL_COLOR
participant "internalList:ObservableList<Student>" as internalList MODEL_COLOR
end box

[-> LogicManager : execute("editStudent 1 n/John")
activate LogicManager

LogicManager -> TrackrParser : parseCommand("editStudent 1 n/John")
activate TrackrParser

create EditStudentCommandParser
TrackrParser -> EditStudentCommandParser
activate EditStudentCommandParser

EditStudentCommandParser --> TrackrParser
deactivate EditStudentCommandParser

TrackrParser -> EditStudentCommandParser : parse("1 n/John")
activate EditStudentCommandParser

create EditStudentCommand
EditStudentCommandParser -> EditStudentCommand
activate EditStudentCommand

EditStudentCommand --> EditStudentCommandParser : e
deactivate EditStudentCommand

EditStudentCommandParser --> TrackrParser : e
deactivate EditStudentCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
EditStudentCommandParser -[hidden]-> TrackrParser
destroy EditStudentCommandParser

TrackrParser --> LogicManager : e
deactivate TrackrParser

LogicManager -> EditStudentCommand : execute()
activate EditStudentCommand

EditStudentCommand -> Model : setStudent(target, editedStudent)
activate Model

Model -> ReadOnlyTrackr : getUniqueStudentList(moduleInView, tgInView)
activate ReadOnlyTrackr

ReadOnlyTrackr --> Model: usl
deactivate ReadOnlyTrackr

Model -> UniqueStudentList: setStudent(target, editedStudent)
activate UniqueStudentList

UniqueStudentList -> internalList: set(target, editedStudent)
activate internalList

internalList --> UniqueStudentList
deactivate internalList

UniqueStudentList --> Model
deactivate UniqueStudentList

Model --> EditStudentCommand
deactivate Model

create CommandResult
EditStudentCommand -> CommandResult
activate CommandResult

CommandResult --> EditStudentCommand
deactivate CommandResult

EditStudentCommand --> LogicManager : result
deactivate AddModuleCommand

[<--LogicManager
deactivate LogicManager
@enduml
