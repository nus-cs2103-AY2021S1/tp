@startuml
!include style.puml
box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ProjactParser" as ProjactParser LOGIC_COLOR
participant ":TaskAddCommandParser" as TaskAddCommandParser LOGIC_COLOR
participant "command:TaskAddCommand" as TaskAddCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("taskadd 1 tn/homework")
activate LogicManager

LogicManager -> ProjactParser : parseCommand("taskadd 1 tn/homework")
activate ProjactParser

create TaskAddCommandParser
ProjactParser -> TaskAddCommandParser
activate TaskAddCommandParser
TaskAddCommandParser --> ProjactParser

deactivate TaskAddCommandParser
ProjactParser -> TaskAddCommandParser : parse("1 tn/homework")
activate TaskAddCommandParser

create TaskAddCommand
TaskAddCommandParser -> TaskAddCommand : TaskAddCommand(index, editTagDescriptor)
activate TaskAddCommand

TaskAddCommand --> TaskAddCommandParser : command
deactivate TaskAddCommand

TaskAddCommandParser --> ProjactParser : command
deactivate TaskAddCommandParser
TaskAddCommandParser -[hidden]-> ProjactParser
destroy TaskAddCommandParser

ProjactParser --> LogicManager : command
deactivate ProjactParser

LogicManager -> TaskAddCommand : execute()
activate TaskAddCommand

TaskAddCommand -> Model : setTag(tagToEdit, editedTag)
activate Model
Model ---> TaskAddCommand
deactivate Model

TaskAddCommand -> Model : updateFilteredTagList()
activate Model
Model ---> TaskAddCommand
deactivate Model

create CommandResult
TaskAddCommand -> CommandResult
activate CommandResult
CommandResult ---> TaskAddCommand : result
deactivate CommandResult

TaskAddCommand --> LogicManager : result
deactivate TaskAddCommand

LogicManager -->[
deactivate LogicManager

@enduml
