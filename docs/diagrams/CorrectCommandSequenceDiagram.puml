@startuml
!include style.puml

skinparam sequence {
participantBorderColor #000000
ArrowColor #000000
ActorBorderColor #000000
LifeLineBorderColor #000000
LifeLineBackgroundColor #000000
}

skinparam sequenceBoxBorderColor #black

Actor User as user USER_COLOR

box Logic #FFFFFF
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":StudyBananasParser" as StudyBananasParser LOGIC_COLOR
participant ":QuizParser" as QuizParser LOGIC_COLOR
participant ":CorrectCommandParser" as CorrectCommandParser LOGIC_COLOR
participant "c:CorrectCommand" as CorrectCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box QuizModel #FFFFFF
participant ":QuizModel" as QuizModel MODEL_COLOR
participant ":Quiz" as Quiz MODEL_COLOR
end box

user -> LogicManager : execute("c")
activate LogicManager LOGIC_COLOR

LogicManager -> StudyBananasParser : parseCommand("c")
activate StudyBananasParser LOGIC_COLOR

StudyBananasParser -> QuizParser : parseCommand("c")
activate QuizParser LOGIC_COLOR

create CorrectCommandParser
QuizParser -> CorrectCommandParser
activate CorrectCommandParser LOGIC_COLOR

CorrectCommandParser --> QuizParser
deactivate CorrectCommandParser LOGIC_COLOR

QuizParser -> CorrectCommandParser : parse("c")
activate CorrectCommandParser LOGIC_COLOR

create CorrectCommand
CorrectCommandParser -> CorrectCommand
activate CorrectCommand LOGIC_COLOR

CorrectCommand --> CorrectCommandParser : c
deactivate CorrectCommand

CorrectCommandParser --> QuizParser : c
deactivate CorrectCommandParser
destroy CorrectCommandParser

QuizParser --> StudyBananasParser : c
deactivate QuizParser

StudyBananasParser --> LogicManager : c
deactivate StudyBananasParser

LogicManager -> CorrectCommand : execute()
activate CorrectCommand LOGIC_COLOR

CorrectCommand -> QuizModel : tallyScore(true)
activate QuizModel MODEL_COLOR

QuizModel -> Quiz : setPointsScored(true)
activate Quiz MODEL_COLOR

Quiz --> QuizModel
deactivate Quiz

QuizModel -> Quiz : getQuestion()
activate Quiz MODEL_COLOR

Quiz --> QuizModel : next question
deactivate Quiz

QuizModel --> CorrectCommand
deactivate QuizModel

create CommandResult
CorrectCommand -> CommandResult
activate CommandResult

CommandResult --> CorrectCommand
deactivate CommandResult

CorrectCommand --> LogicManager : result
deactivate CorrectCommand

user <--LogicManager
deactivate LogicManager
@enduml
