@startuml
!include style.puml
skinparam ParticipantFontSize 30
skinparam ArrowFontSize 28
skinparam defaultFontSize 28

box LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ProductiveNusParser" as ProductiveNusParser LOGIC_COLOR
participant ":ScheduleCommandParser" as ScheduleCommandParser LOGIC_COLOR
participant ":ScheduleCommand" as ScheduleCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("schedule 3 hrs/5 af/01-01-2020 0000 by/23-12-2020 2359")
activate LogicManager

LogicManager -> ProductiveNusParser : parseCommand("schedule 3 hrs/5 af/01-01-2020 0000 by/23-12-2020 2359")
activate ProductiveNusParser

create ScheduleCommandParser
ProductiveNusParser -> ScheduleCommandParser
activate ScheduleCommandParser

ScheduleCommandParser --> ProductiveNusParser
deactivate ScheduleCommandParser

ProductiveNusParser -> ScheduleCommandParser : parse("3 hrs/5 af/01-01-2020 0000 by/23-12-2020 2359")
activate ScheduleCommandParser

create ScheduleCommand
ScheduleCommandParser -> ScheduleCommand : ScheduleCommand(index, expectedTime, doAfter, doBefore)
activate ScheduleCommand

ScheduleCommand --> ScheduleCommandParser
deactivate ScheduleCommand

ScheduleCommandParser --> ProductiveNusParser
deactivate ScheduleCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
ScheduleCommandParser -[hidden]-> ProductiveNusParser
destroy ScheduleCommandParser

ProductiveNusParser --> LogicManager
deactivate ProductiveNusParser

LogicManager -> ScheduleCommand : execute()
activate ScheduleCommand

ScheduleCommand -> Model : get
activate Model
Model --> ScheduleCommand : assignmentToSchedule
deactivate Model

ScheduleCommand -> Model : getFilteredTaskList
activate Model
Model --> ScheduleCommand : taskList
deactivate Model

ScheduleCommand -> Model : setAssignment(assignmentToSchedule, scheduledAssignment)
activate Model
Model --> ScheduleCommand
deactivate Model

create CommandResult
ScheduleCommand -> CommandResult : CommandResult(scheduledAssignment)
activate CommandResult

CommandResult --> ScheduleCommand
deactivate CommandResult

ScheduleCommand --> LogicManager : result
deactivate ScheduleCommand

[<--LogicManager
deactivate LogicManager
@enduml
