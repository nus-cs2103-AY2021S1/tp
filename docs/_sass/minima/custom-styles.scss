// Placeholder to allow defining custom styles that override everything else.
// (Use `_sass/minima/custom-variables.scss` to override variable defaults)
body {
  background-color: #fef4e8;
}

h2, h3, h4, h5, h6 {
  font-weight: bold;
  color: #3a506b;
}

div > img, p > img {
  display: block;
  margin: auto;
  margin-bottom: 30px;
  -webkit-box-shadow: 7px 7px 15px 0px rgba(0,0,0,0.75);
  -moz-box-shadow: 7px 7px 15px 0px rgba(0,0,0,0.75);
  box-shadow: 7px 7px 15px 0px rgba(0,0,0,0.75);
}

img.emoji {
  display: inline !important;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
}

table {
  tr {
    &:nth-child(odd) {
      background-color: #fcfbf8;
    }
    &:nth-child(even) {
      background-color: #faf9f6;
    }
  }
}

a {
  color: #d40000;
}

a:visited {
  color: #d40000;
}

// Bootstrap style alerts
.alert {
  position: relative;
  padding: $alert-padding-y $alert-padding-x;
  margin-bottom: $alert-margin-bottom;
  border: $alert-border-width solid transparent;
  order-radius : $alert-border-radius;
}

// Headings for larger alerts
.alert-heading {
  // Specified to prevent conflicts of changing $headings-color
  color: inherit;
}

// Provide class for links that match alerts
.alert-link {
  font-weight: $alert-link-font-weight;
}

// Generate contextual modifier classes for colorizing the alert.

@each $color, $value in $theme-colors {
  .alert-#{$color} {
    @include alert-variant(color-level($value, $alert-bg-level), color-level($value, $alert-border-level), color-level($value, $alert-color-level));
  }
}
